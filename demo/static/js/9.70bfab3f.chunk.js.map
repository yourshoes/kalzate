{"version":3,"sources":["../../../node_modules/d3-array/src/ascending.js","../../../node_modules/d3-array/src/bisector.js","../../../node_modules/d3-array/src/bisect.js","../../../node_modules/d3-array/src/cross.js","../../../node_modules/d3-array/src/array.js","../../../node_modules/d3-array/src/range.js","../../../node_modules/d3-array/src/ticks.js","../../../node_modules/d3-scale/src/init.js","../../../node_modules/d3-collection/src/map.js","../../../node_modules/d3-collection/src/set.js","../../../node_modules/d3-scale/src/array.js","../../../node_modules/d3-scale/src/ordinal.js","../../../node_modules/d3-scale/src/band.js","../../../node_modules/d3-color/src/define.js","../../../node_modules/d3-color/src/color.js","../../../node_modules/d3-interpolate/src/basis.js","../../../node_modules/d3-interpolate/src/constant.js","../../../node_modules/d3-interpolate/src/color.js","../../../node_modules/d3-interpolate/src/rgb.js","../../../node_modules/d3-interpolate/src/basisClosed.js","../../../node_modules/d3-interpolate/src/numberArray.js","../../../node_modules/d3-interpolate/src/array.js","../../../node_modules/d3-interpolate/src/date.js","../../../node_modules/d3-interpolate/src/number.js","../../../node_modules/d3-interpolate/src/string.js","../../../node_modules/d3-interpolate/src/value.js","../../../node_modules/d3-interpolate/src/object.js","../../../node_modules/d3-interpolate/src/round.js","../../../node_modules/d3-scale/src/constant.js","../../../node_modules/d3-scale/src/number.js","../../../node_modules/d3-scale/src/continuous.js","../../../node_modules/d3-format/src/formatSpecifier.js","../../../node_modules/d3-format/src/formatDecimal.js","../../../node_modules/d3-format/src/formatPrefixAuto.js","../../../node_modules/d3-format/src/defaultLocale.js","../../../node_modules/d3-format/src/exponent.js","../../../node_modules/d3-format/src/formatTrim.js","../../../node_modules/d3-format/src/formatRounded.js","../../../node_modules/d3-format/src/formatTypes.js","../../../node_modules/d3-format/src/identity.js","../../../node_modules/d3-format/src/locale.js","../../../node_modules/d3-format/src/formatGroup.js","../../../node_modules/d3-format/src/formatNumerals.js","../../../node_modules/d3-format/src/precisionRound.js","../../../node_modules/d3-scale/src/tickFormat.js","../../../node_modules/d3-format/src/precisionPrefix.js","../../../node_modules/d3-format/src/precisionFixed.js","../../../node_modules/d3-scale/src/linear.js","../../../node_modules/d3-time/src/interval.js","../../../node_modules/d3-time/src/year.js","../../../node_modules/d3-time/src/month.js","../../../node_modules/d3-time/src/duration.js","../../../node_modules/d3-time/src/week.js","../../../node_modules/d3-time/src/day.js","../../../node_modules/d3-time/src/hour.js","../../../node_modules/d3-time/src/minute.js","../../../node_modules/d3-time/src/second.js","../../../node_modules/d3-time/src/millisecond.js","../../../node_modules/d3-time/src/utcWeek.js","../../../node_modules/d3-time/src/utcDay.js","../../../node_modules/d3-time/src/utcYear.js","../../../node_modules/d3-time-format/src/locale.js","../../../node_modules/d3-time-format/src/defaultLocale.js","../../../node_modules/d3-scale/src/time.js","../../../node_modules/d3-time/src/utcMonth.js","../../../node_modules/d3-time/src/utcHour.js","../../../node_modules/d3-time/src/utcMinute.js","../../../node_modules/d3-scale/src/index.js"],"names":["ascending","a","b","NaN","bisector","compare","f","length","d","x","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisect","array_array","Array","prototype","src_range","slice","map","start","stop","step","n","arguments","i","Math","max","ceil","range","e10","sqrt","e5","e2","ticks","count","reverse","tickIncrement","isFinite","floor","power","log","LN10","error","pow","tickStep","step0","abs","step1","initRange","domain","this","Map","map_map","object","each","value","key","set","isArray","o","constructor","has","get","remove","property","clear","keys","push","values","entries","size","empty","src_map","Set","proto","add","src_array_array","array_map","array_slice","implicit","name","band","bandwidth","scale","ordinal","index","unknown","_","call","copy","apply","undefined","ordinalRange","round","paddingInner","paddingOuter","align","rescale","rangeRound","padding","min","define","factory","extend","parent","definition","Object","create","Color","reI","reN","reP","reHex","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_formatHex","rgb","formatHex","color_formatRgb","formatRgb","color_color","format","m","l","trim","toLowerCase","exec","parseInt","rgbn","Rgb","rgba","hsla","hasOwnProperty","r","g","color_rgb","opacity","rgb_formatHex","hex","rgb_formatRgb","isNaN","toString","h","s","Hsl","hslConvert","hsl2rgb","m1","m2","basis","t1","v0","v1","v2","v3","t2","t3","channels","assign","displayable","formatHsl","brighter","k","darker","src_constant","linear","t","gamma","y","nogamma","exponential","src_rgb","rgbGamma","color","end","rgbSpline","spline","colors","numberArray","c","isNumberArray","ArrayBuffer","isView","DataView","genericArray","nb","na","src_value","src_number","reA","reB","source","am","bm","bs","bi","lastIndex","q","one","string_zero","join","Date","setTime","valueOf","src_round","d3_scale_src_constant","d3_scale_src_number","unit","continuous_identity","normalize","clamper","bimap","interpolate","d0","d1","r0","r1","polymap","j","target","clamp","transformer","transform","untransform","piecewise","output","input","invert","u","continuous","re","formatSpecifier","specifier","match","Error","FormatSpecifier","fill","sign","symbol","zero","width","comma","precision","type","prefixExponent","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","formatDecimal","p","toExponential","indexOf","coefficient","src_exponent","formatTrim","out","i1","i0","formatRounded","exponent","formatTypes","%","toFixed","e","toPrecision","_p","X","toUpperCase","_x","src_identity","locale_map","prefixes","locale","grouping","thousands","group","Number","substring","currencyPrefix","currency","currencySuffix","decimal","numerals","replace","formatNumerals","String","percent","minus","nan","newFormat","prefix","test","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","formatPrefix","src_locale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","linear_linear","interval_t0","interval_t1","newInterval","floori","offseti","field","interval","date","offset","previous","filter","every","year_year","setMonth","setHours","setFullYear","getFullYear","src_year","month_month","setDate","getMonth","durationMinute","durationWeek","weekday","getDate","getDay","getTimezoneOffset","sunday","monday","tuesday","wednesday","thursday","friday","saturday","day_day","src_day","hour_hour","getMilliseconds","getSeconds","getMinutes","getHours","minute_minute","second_second","getUTCSeconds","millisecond_millisecond","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcDay","src_utcDay","utcYear","setUTCMonth","setUTCFullYear","getUTCFullYear","src_utcYear","localDate","H","M","S","L","utcDate","UTC","newDate","src_defaultLocale_locale","pads","-","0","numberRe","percentRe","requoteRe","pad","string","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseQuarter","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","day","formatWeekNumberSunday","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","locale_formatYear","formatFullYear","formatZone","z","formatUTCDayOfMonth","formatUTCHour24","getUTCHours","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","getUTCMonth","formatUTCMinutes","getUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","A","B","I","Y","utcFormats","parses","parseSpecifier","charAt","newParse","week","parse","utcFormat","utcParse","formatLocale","defaultLocale_defaultLocale","utcMonth","utcHour","setUTCMinutes","utcMinute","setUTCSeconds","__webpack_require__","__webpack_exports__"],"mappings":"0FAAe,IAAAA,EAAA,SAAAC,EAAAC,GACf,OAAAD,EAAAC,GAAA,EAAAD,EAAAC,EAAA,EAAAD,GAAAC,EAAA,EAAAC,KCAeC,EAAA,SAAAC,GA4Bf,IAAAC,EA1BA,OADA,IAAAD,EAAAE,SA2BAD,EA3BAD,IA4BA,SAAAG,EAAAC,GACA,OAAWT,EAASM,EAAAE,GAAAC,KA5BpB,CACAC,KAAA,SAAAT,EAAAQ,EAAAE,EAAAC,GAIA,IAHA,MAAAD,MAAA,GACA,MAAAC,MAAAX,EAAAM,QAEAI,EAAAC,GAAA,CACA,IAAAC,EAAAF,EAAAC,IAAA,EACAP,EAAAJ,EAAAY,GAAAJ,GAAA,EAAAE,EAAAE,EAAA,EAAiDD,EAAAC,EAGjD,OAAAF,GAEAG,MAAA,SAAAb,EAAAQ,EAAAE,EAAAC,GAIA,IAHA,MAAAD,MAAA,GACA,MAAAC,MAAAX,EAAAM,QAEAI,EAAAC,GAAA,CACA,IAAAC,EAAAF,EAAAC,IAAA,EACAP,EAAAJ,EAAAY,GAAAJ,GAAA,EAAAG,EAAAC,EAA6CF,EAAAE,EAAA,EAG7C,OAAAF,KCtBA,IAAAI,EAAsBX,EAASJ,GACxBgB,EAAAD,EAAAD,MAEQG,GADRF,EAAAL,KACQ,GCJA,ICDXQ,EAAKC,MAAAC,UCAMC,GDCIH,EAAKI,MACPJ,EAAKK,ICFP,SAAAC,EAAAC,EAAAC,GACfF,KAAAC,KAAAC,GAAAC,EAAAC,UAAArB,QAAA,GAAAkB,EAAAD,IAAA,KAAAG,EAAA,KAAAD,EAKA,IAJA,IAAAG,GAAA,EACAF,EAAA,EAAAG,KAAAC,IAAA,EAAAD,KAAAE,MAAAP,EAAAD,GAAAE,IACAO,EAAA,IAAAd,MAAAQ,KAEAE,EAAAF,GACAM,EAAAJ,GAAAL,EAAAK,EAAAH,EAGA,OAAAO,ICVAC,EAAAJ,KAAAK,KAAA,IACAC,EAAAN,KAAAK,KAAA,IACAE,EAAAP,KAAAK,KAAA,GACeG,EAAA,SAAAd,EAAAC,EAAAc,GACf,IAAAC,EAEAb,EACAW,EACAZ,EAHAG,GAAA,EAKA,GADAU,MAAAf,SAAAC,OACAc,EAAA,SAAAf,GAEA,IADAgB,EAAAf,EAAAD,KAAAG,EAAAH,IAAAC,IAAAE,GACA,KAAAD,EAAAe,EAAAjB,EAAAC,EAAAc,MAAAG,SAAAhB,GAAA,SAEA,GAAAA,EAAA,EAKA,IAJAF,EAAAM,KAAAE,KAAAR,EAAAE,GACAD,EAAAK,KAAAa,MAAAlB,EAAAC,GACAY,EAAA,IAAAnB,MAAAQ,EAAAG,KAAAE,KAAAP,EAAAD,EAAA,MAEAK,EAAAF,GACAW,EAAAT,IAAAL,EAAAK,GAAAH,OAOA,IAJAF,EAAAM,KAAAa,MAAAnB,EAAAE,GACAD,EAAAK,KAAAE,KAAAP,EAAAC,GACAY,EAAA,IAAAnB,MAAAQ,EAAAG,KAAAE,KAAAR,EAAAC,EAAA,MAEAI,EAAAF,GACAW,EAAAT,IAAAL,EAAAK,GAAAH,EAKA,OADAc,GAAAF,EAAAE,UACAF,GAEO,SAAAG,EAAAjB,EAAAC,EAAAc,GACP,IAAAb,GAAAD,EAAAD,GAAAM,KAAAC,IAAA,EAAAQ,GACAK,EAAAd,KAAAa,MAAAb,KAAAe,IAAAnB,GAAAI,KAAAgB,MACAC,EAAArB,EAAAI,KAAAkB,IAAA,GAAAJ,GACA,OAAAA,GAAA,GAAAG,GAAAb,EAAA,GAAAa,GAAAX,EAAA,EAAAW,GAAAV,EAAA,KAAAP,KAAAkB,IAAA,GAAAJ,IAAAd,KAAAkB,IAAA,IAAAJ,IAAAG,GAAAb,EAAA,GAAAa,GAAAX,EAAA,EAAAW,GAAAV,EAAA,KAEO,SAAAY,EAAAzB,EAAAC,EAAAc,GACP,IAAAW,EAAApB,KAAAqB,IAAA1B,EAAAD,GAAAM,KAAAC,IAAA,EAAAQ,GACAa,EAAAtB,KAAAkB,IAAA,GAAAlB,KAAAa,MAAAb,KAAAe,IAAAK,GAAApB,KAAAgB,OACAC,EAAAG,EAAAE,EAEA,OADAL,GAAAb,EAAAkB,GAAA,GAAgCL,GAAAX,EAAAgB,GAAA,EAAiCL,GAAAV,IAAAe,GAAA,GACjE3B,EAAAD,GAAA4B,IC9CO,SAAAC,EAAAC,EAAArB,GACP,OAAAL,UAAArB,QACA,OACA,MAEA,OACAgD,KAAAtB,MAAAqB,GACA,MAEA,QACAC,KAAAtB,SAAAqB,UAIA,OAAAC,KCZA,SAAAC,KA4EA,SAASC,EAAGC,EAAApD,GACZ,IAAAiB,EAAA,IAAAiC,EAEA,GAAAE,aAAAF,EAAAE,EAAAC,KAAA,SAAAC,EAAAC,GACAtC,EAAAuC,IAAAD,EAAAD,UAEA,GAAAzC,MAAA4C,QAAAL,GAAA,CACA,IAEAM,EAFAnC,GAAA,EACAF,EAAA+B,EAAAnD,OAEA,SAAAD,EAAA,OAAAuB,EAAAF,GACAJ,EAAAuC,IAAAjC,EAAA6B,EAAA7B,SACO,OAAAA,EAAAF,GACPJ,EAAAuC,IAAAxD,EAAA0D,EAAAN,EAAA7B,KAAA6B,GAAAM,QAGA,GAAAN,EAAA,QAAAG,KAAAH,EACAnC,EAAAuC,IAAAD,EAAAH,EAAAG,IAEA,OAAAtC,EA7FAiC,EAAApC,UAAgBqC,EAAGrC,UAAA,CACnB6C,YAAAT,EACAU,IAAA,SAAAL,GACA,MAPiB,IAOAA,KAAAN,MAEjBY,IAAA,SAAAN,GACA,OAAAN,KAViB,IAUKM,IAEtBC,IAAA,SAAAD,EAAAD,GAEA,OADAL,KAbiB,IAaFM,GAAAD,EACfL,MAEAa,OAAA,SAAAP,GACA,IAAAQ,EAjBiB,IAiBQR,EACzB,OAAAQ,KAAAd,kBAAAc,IAEAC,MAAA,WACA,QAAAD,KAAAd,KArBiB,MAsBjBc,EAAA,WAAgCd,KAAAc,IAGhCE,KAAA,WACA,IAAAA,EAAA,GAEA,QAAAF,KAAAd,KA5BiB,MA6BjBc,EAAA,IAAgCE,EAAAC,KAAAH,EAAA/C,MAAA,IAGhC,OAAAiD,GAEAE,OAAA,WACA,IAAAA,EAAA,GAEA,QAAAJ,KAAAd,KArCiB,MAsCjBc,EAAA,IAAgCI,EAAAD,KAAAjB,KAAAc,IAGhC,OAAAI,GAEAC,QAAA,WACA,IAAAA,EAAA,GAEA,QAAAL,KAAAd,KA9CiB,MA+CjBc,EAAA,IAAgCK,EAAAF,KAAA,CAChCX,IAAAQ,EAAA/C,MAAA,GACAsC,MAAAL,KAAAc,KAIA,OAAAK,GAEAC,KAAA,WACA,IAAAA,EAAA,EAEA,QAAAN,KAAAd,KA1DiB,MA2DjBc,EAAA,MAAgCM,EAGhC,OAAAA,GAEAC,MAAA,WACA,QAAAP,KAAAd,KACA,GAlEiB,MAkEjBc,EAAA,GAAgC,SAGhC,UAEAV,KAAA,SAAArD,GACA,QAAA+D,KAAAd,KAxEiB,MAyEjBc,EAAA,IAAgC/D,EAAAiD,KAAAc,KAAA/C,MAAA,GAAAiC,QA2BjB,IAAAsB,EAAA,EClGf,SAAAC,KAEA,IAAAC,EAAYF,EAAGzD,UAiBf,SAAA0C,EAAAJ,EAAApD,GACA,IAAAwD,EAAA,IAAAgB,EAEA,GAAApB,aAAAoB,EAAApB,EAAAC,KAAA,SAAAC,GACAE,EAAAkB,IAAApB,UAEA,GAAAF,EAAA,CACA,IAAA7B,GAAA,EACAF,EAAA+B,EAAAnD,OACA,SAAAD,EAAA,OAAAuB,EAAAF,GACAmC,EAAAkB,IAAAtB,EAAA7B,SACO,OAAAA,EAAAF,GACPmC,EAAAkB,IAAA1E,EAAAoD,EAAA7B,KAAA6B,IAGA,OAAAI,EA/BAgB,EAAA1D,UAAA0C,EAAA1C,UAAA,CACA6C,YAAAa,EACAZ,IAAAa,EAAAb,IACAc,IAAA,SAAApB,GAGA,OADAL,KDViB,KCSjBK,GAAA,KACeA,EACfL,MAEAa,OAAAW,EAAAX,OACAE,MAAAS,EAAAT,MACAG,OAAAM,EAAAR,KACAI,KAAAI,EAAAJ,KACAC,MAAAG,EAAAH,MACAjB,KAAAoB,EAAApB,MAqBe,ICvCXsB,EAAK9D,MAAAC,UACE8D,EAAMD,EAAK1D,IACX4D,EAAQF,EAAK3D,MCCjB8D,EAAA,CACPC,KAAA,YCDe,SAAAC,IACf,IAIA5D,EACA6D,EALAC,EDEe,SAAAC,IACf,IAAAC,EAAcb,IACdvB,EAAA,GACArB,EAAA,GACA0D,EAAAP,EAEA,SAAAI,EAAAhF,GACA,IAAAqD,EAAArD,EAAA,GACAqB,EAAA6D,EAAAvB,IAAAN,GAEA,IAAAhC,EAAA,CACA,GAAA8D,IAAAP,EAAA,OAAAO,EACAD,EAAA5B,IAAAD,EAAAhC,EAAAyB,EAAAkB,KAAAhE,IAGA,OAAAyB,GAAAJ,EAAA,GAAAI,EAAA1B,QA+BA,OA5BAiF,EAAAlC,OAAA,SAAAsC,GACA,IAAAhE,UAAArB,OAAA,OAAA+C,EAAAhC,QACAgC,EAAA,GAAAoC,EAAyBb,IAMzB,IALA,IAEArE,EACAqD,EAHAhC,GAAA,EACAF,EAAAiE,EAAArF,SAIAsB,EAAAF,GACA+D,EAAAxB,IAAAL,GAAArD,EAAAoF,EAAA/D,IAAA,KAAA6D,EAAA5B,IAAAD,EAAAP,EAAAkB,KAAAhE,IAGA,OAAAgF,GAGAA,EAAAvD,MAAA,SAAA2D,GACA,OAAAhE,UAAArB,QAAA0B,EAAuCkD,EAAKU,KAAAD,GAAAJ,GAAAvD,EAAAX,SAG5CkE,EAAAG,QAAA,SAAAC,GACA,OAAAhE,UAAArB,QAAAoF,EAAAC,EAAAJ,GAAAG,GAGAH,EAAAM,KAAA,WACA,OAAAL,EAAAnC,EAAArB,GAAA0D,YAGEtC,EAAS0C,MAAAP,EAAA5D,WACX4D,EChDcC,GAAOE,aAAAK,GACrB1C,EAAAkC,EAAAlC,OACA2C,EAAAT,EAAAvD,MACAA,EAAA,MAGAiE,GAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,GAGA,SAAAC,IACA,IAAA3E,EAAA2B,IAAA/C,OACAiC,EAAAP,EAAA,GAAAA,EAAA,GACAT,EAAAS,EAAAO,EAAA,GACAf,EAAAQ,EAAA,EAAAO,GACAd,GAAAD,EAAAD,GAAAM,KAAAC,IAAA,EAAAJ,EAAAwE,EAAA,EAAAC,GACAF,IAAAxE,EAAAI,KAAAa,MAAAjB,IACAF,IAAAC,EAAAD,EAAAE,GAAAC,EAAAwE,IAAAE,EACAd,EAAA7D,GAAA,EAAAyE,GACAD,IAAA1E,EAAAM,KAAAoE,MAAA1E,GAAA+D,EAAAzD,KAAAoE,MAAAX,IACA,IAAAd,EAAiBpD,EAAQM,GAAAJ,IAAA,SAAAM,GACzB,OAAAL,EAAAE,EAAAG,IAEA,OAAAoE,EAAAzD,EAAAiC,EAAAjC,UAAAiC,GA+CA,cA9DAe,EAAAG,QAkBAH,EAAAlC,OAAA,SAAAsC,GACA,OAAAhE,UAAArB,QAAA+C,EAAAsC,GAAAU,KAAAhD,KAGAkC,EAAAvD,MAAA,SAAA2D,GACA,OAAAhE,UAAArB,QAAA0B,EAAA,EAAA2D,EAAA,IAAAA,EAAA,IAAAU,KAAArE,EAAAX,SAGAkE,EAAAe,WAAA,SAAAX,GACA,OAAA3D,EAAA,EAAA2D,EAAA,IAAAA,EAAA,IAAAM,GAAA,EAAAI,KAGAd,EAAAD,UAAA,WACA,OAAAA,GAGAC,EAAA9D,KAAA,WACA,OAAAA,GAGA8D,EAAAU,MAAA,SAAAN,GACA,OAAAhE,UAAArB,QAAA2F,IAAAN,EAAAU,KAAAJ,GAGAV,EAAAgB,QAAA,SAAAZ,GACA,OAAAhE,UAAArB,QAAA4F,EAAArE,KAAA2E,IAAA,EAAAL,GAAAR,GAAAU,KAAAH,GAGAX,EAAAW,aAAA,SAAAP,GACA,OAAAhE,UAAArB,QAAA4F,EAAArE,KAAA2E,IAAA,EAAAb,GAAAU,KAAAH,GAGAX,EAAAY,aAAA,SAAAR,GACA,OAAAhE,UAAArB,QAAA6F,GAAAR,EAAAU,KAAAF,GAGAZ,EAAAa,MAAA,SAAAT,GACA,OAAAhE,UAAArB,QAAA8F,EAAAvE,KAAAC,IAAA,EAAAD,KAAA2E,IAAA,EAAAb,IAAAU,KAAAD,GAGAb,EAAAM,KAAA,WACA,OAAAR,EAAAhC,IAAArB,GAAAiE,SAAAC,gBAAAC,gBAAAC,UAGShD,EAAS0C,MAAAO,IAAA1E,WC5EH,IAAA8E,EAAA,SAAAzC,EAAA0C,EAAAvF,GACf6C,EAAA7C,UAAAuF,EAAAvF,YACAA,EAAA6C,eAEO,SAAA2C,EAAAC,EAAAC,GACP,IAAA1F,EAAA2F,OAAAC,OAAAH,EAAAzF,WAEA,QAAAyC,KAAAiD,EACA1F,EAAAyC,GAAAiD,EAAAjD,GAGA,OAAAzC,ECVO,SAAA6F,KACP,IAMAC,EAAA,sBACAC,EAAA,gDACAC,EAAA,iDACAC,EAAA,qBACAC,EAAA,IAAAC,OAAA,WAAAL,OAAA,QACAM,EAAA,IAAAD,OAAA,WAAAH,OAAA,QACAK,EAAA,IAAAF,OAAA,YAAAL,MAAAC,GAAA,QACAO,EAAA,IAAAH,OAAA,YAAAH,MAAAD,GAAA,QACAQ,EAAA,IAAAJ,OAAA,WAAAJ,EAAAC,KAAA,QACAQ,EAAA,IAAAL,OAAA,YAAAJ,EAAAC,IAAAD,GAAA,QACAU,EAAA,CACAC,UAAA,SACAC,aAAA,SACAC,KAAA,MACAC,WAAA,QACAC,MAAA,SACAC,MAAA,SACAC,OAAA,SACAC,MAAA,EACAC,eAAA,SACAC,KAAA,IACAC,WAAA,QACAC,MAAA,SACAC,UAAA,SACAC,UAAA,QACAC,WAAA,QACAC,UAAA,SACAC,MAAA,SACAC,eAAA,QACAC,SAAA,SACAC,QAAA,SACAC,KAAA,MACAC,SAAA,IACAC,SAAA,MACAC,cAAA,SACAC,SAAA,SACAC,UAAA,MACAC,SAAA,SACAC,UAAA,SACAC,YAAA,QACAC,eAAA,QACAC,WAAA,SACAC,WAAA,SACAC,QAAA,QACAC,WAAA,SACAC,aAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,MACAC,WAAA,QACAC,SAAA,SACAC,YAAA,MACAC,QAAA,QACAC,QAAA,QACAC,WAAA,QACAC,UAAA,SACAC,YAAA,SACAC,YAAA,QACAC,QAAA,SACAC,UAAA,SACAC,WAAA,SACAC,KAAA,SACAC,UAAA,SACAC,KAAA,QACAC,MAAA,MACAC,YAAA,SACAC,KAAA,QACAC,SAAA,SACAC,QAAA,SACAC,UAAA,SACAC,OAAA,QACAC,MAAA,SACAC,MAAA,SACAC,SAAA,SACAC,cAAA,SACAC,UAAA,QACAC,aAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,qBAAA,SACAC,UAAA,SACAC,WAAA,QACAC,UAAA,SACAC,UAAA,SACAC,YAAA,SACAC,cAAA,QACAC,aAAA,QACAC,eAAA,QACAC,eAAA,QACAC,eAAA,SACAC,YAAA,SACAC,KAAA,MACAC,UAAA,QACAC,MAAA,SACAC,QAAA,SACAC,OAAA,QACAC,iBAAA,QACAC,WAAA,IACAC,aAAA,SACAC,aAAA,QACAC,eAAA,QACAC,gBAAA,QACAC,kBAAA,MACAC,gBAAA,QACAC,gBAAA,SACAC,aAAA,QACAC,UAAA,SACAC,UAAA,SACAC,SAAA,SACAC,YAAA,SACAC,KAAA,IACAC,QAAA,SACAC,MAAA,QACAC,UAAA,QACAC,OAAA,SACAC,UAAA,SACAC,OAAA,SACAC,cAAA,SACAC,UAAA,SACAC,cAAA,SACAC,cAAA,SACAC,WAAA,SACAC,UAAA,SACAC,KAAA,SACAC,KAAA,SACAC,KAAA,SACAC,WAAA,SACAC,OAAA,QACAC,cAAA,QACAC,IAAA,SACAC,UAAA,SACAC,UAAA,QACAC,YAAA,QACAC,OAAA,SACAC,WAAA,SACAC,SAAA,QACAC,SAAA,SACAC,OAAA,SACAC,OAAA,SACAC,QAAA,QACAC,UAAA,QACAC,UAAA,QACAC,UAAA,QACAC,KAAA,SACAC,YAAA,MACAC,UAAA,QACAC,IAAA,SACAC,KAAA,MACAC,QAAA,SACAC,OAAA,SACAC,UAAA,QACAC,OAAA,SACAC,MAAA,SACAC,MAAA,SACAC,WAAA,SACAC,OAAA,SACAC,YAAA,UAiBA,SAAAC,IACA,OAAA3N,KAAA4N,MAAAC,YAOA,SAAAC,IACA,OAAA9N,KAAA4N,MAAAG,YAGe,SAASC,EAAKC,GAC7B,IAAAC,EAAAC,EAEA,OADAF,KAAA,IAAAG,OAAAC,eACAH,EAAApK,EAAAwK,KAAAL,KAAAE,EAAAD,EAAA,GAAAlR,OAAAkR,EAAAK,SAAAL,EAAA,WAAAC,EAAAK,EAAAN,GACA,IAAAC,EAAA,IAAAM,EAAAP,GAAA,KAAAA,GAAA,MAAAA,GAAA,SAAAA,GAAA,GAAAA,IAAA,KAAAA,EAAA,GACA,IAAAC,EAAAO,EAAAR,GAAA,OAAAA,GAAA,OAAAA,GAAA,WAAAA,GAAA,KACA,IAAAC,EAAAO,EAAAR,GAAA,MAAAA,GAAA,MAAAA,GAAA,KAAAA,GAAA,MAAAA,GAAA,SAAAA,IAAA,GAAAA,IAAA,KAAAA,GAAA,KACA,OACAA,EAAAnK,EAAAuK,KAAAL,IAAA,IAAAQ,EAAAP,EAAA,GAAAA,EAAA,GAAAA,EAAA,OACAA,EAAAjK,EAAAqK,KAAAL,IAAA,IAAAQ,EAAA,IAAAP,EAAA,WAAAA,EAAA,WAAAA,EAAA,WACAA,EAAAhK,EAAAoK,KAAAL,IAAAS,EAAAR,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACAA,EAAA/J,EAAAmK,KAAAL,IAAAS,EAAA,IAAAR,EAAA,WAAAA,EAAA,WAAAA,EAAA,OAAAA,EAAA,KACAA,EAAA9J,EAAAkK,KAAAL,IAAAU,EAAAT,EAAA,GAAAA,EAAA,OAAAA,EAAA,WACAA,EAAA7J,EAAAiK,KAAAL,IAAAU,EAAAT,EAAA,GAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,IACA5J,EAAAsK,eAAAX,GAAAO,EAAAlK,EAAA2J,IACA,gBAAAA,EAAA,IAAAQ,EAAA7R,YAAA,QAGA,SAAA4R,EAAApQ,GACA,WAAAqQ,EAAArQ,GAAA,OAAAA,GAAA,UAAAA,EAAA,GAGA,SAAAsQ,EAAAG,EAAAC,EAAAnS,EAAAD,GAEA,OADAA,GAAA,IAAAmS,EAAAC,EAAAnS,EAAAC,KACA,IAAA6R,EAAAI,EAAAC,EAAAnS,EAAAD,GASO,SAASqS,EAAGF,EAAAC,EAAAnS,EAAAqS,GACnB,WAAA3Q,UAAArB,SAPOyD,EAOPoO,aANAnL,IAAAjD,EAAiCuN,EAAKvN,IACtCA,EAEA,IAAAgO,GADAhO,IAAAmN,OACAiB,EAAApO,EAAAqO,EAAArO,EAAA9D,EAAA8D,EAAAuO,SAFA,IAAAP,GAKA,IAAAA,EAAAI,EAAAC,EAAAnS,EAAA,MAAAqS,EAAA,EAAAA,GAPO,IAAAvO,EASA,SAAAgO,EAAAI,EAAAC,EAAAnS,EAAAqS,GACPhP,KAAA6O,KACA7O,KAAA8O,KACA9O,KAAArD,KACAqD,KAAAgP,WAwBA,SAAAC,IACA,UAAAC,EAAAlP,KAAA6O,GAAAK,EAAAlP,KAAA8O,GAAAI,EAAAlP,KAAArD,GAGA,SAAAwS,IACA,IAAAzS,EAAAsD,KAAAgP,QAEA,YADAtS,EAAA0S,MAAA1S,GAAA,EAAA6B,KAAAC,IAAA,EAAAD,KAAA2E,IAAA,EAAAxG,KACA,gBAAA6B,KAAAC,IAAA,EAAAD,KAAA2E,IAAA,IAAA3E,KAAAoE,MAAA3C,KAAA6O,IAAA,SAAAtQ,KAAAC,IAAA,EAAAD,KAAA2E,IAAA,IAAA3E,KAAAoE,MAAA3C,KAAA8O,IAAA,SAAAvQ,KAAAC,IAAA,EAAAD,KAAA2E,IAAA,IAAA3E,KAAAoE,MAAA3C,KAAArD,IAAA,SAAAD,EAAA,SAAAA,EAAA,KAGA,SAAAwS,EAAA7O,GAEA,QADAA,EAAA9B,KAAAC,IAAA,EAAAD,KAAA2E,IAAA,IAAA3E,KAAAoE,MAAAtC,IAAA,KACA,WAAAA,EAAAgP,SAAA,IAGA,SAAAV,EAAAW,EAAAC,EAAApB,EAAAzR,GAEA,OADAA,GAAA,EAAA4S,EAAAC,EAAApB,EAAAvR,IAA8BuR,GAAA,GAAAA,GAAA,EAAAmB,EAAAC,EAAA3S,IAAuC2S,GAAA,IAAAD,EAAA1S,KACrE,IAAA4S,GAAAF,EAAAC,EAAApB,EAAAzR,GAGO,SAAA+S,EAAAhP,GACP,GAAAA,aAAA+O,GAAA,WAAAA,GAAA/O,EAAA6O,EAAA7O,EAAA8O,EAAA9O,EAAA0N,EAAA1N,EAAAuO,SAEA,GADAvO,aAAAiD,IAAAjD,EAAiCuN,EAAKvN,KACtCA,EAAA,WAAA+O,GACA,GAAA/O,aAAA+O,GAAA,OAAA/O,EAEA,IAAAoO,GADApO,IAAAmN,OACAiB,EAAA,IACAC,EAAArO,EAAAqO,EAAA,IACAnS,EAAA8D,EAAA9D,EAAA,IACAuG,EAAA3E,KAAA2E,IAAA2L,EAAAC,EAAAnS,GACA6B,EAAAD,KAAAC,IAAAqQ,EAAAC,EAAAnS,GACA2S,EAAA1S,IACA2S,EAAA/Q,EAAA0E,EACAiL,GAAA3P,EAAA0E,GAAA,EAUA,OARAqM,GACAD,EAAAT,IAAArQ,GAAAsQ,EAAAnS,GAAA4S,EAAA,GAAAT,EAAAnS,GAAiDmS,IAAAtQ,GAAA7B,EAAAkS,GAAAU,EAAA,GAAwCV,EAAAC,GAAAS,EAAA,EACzFA,GAAApB,EAAA,GAAA3P,EAAA0E,EAAA,EAAA1E,EAAA0E,EACAoM,GAAA,IAEAC,EAAApB,EAAA,GAAAA,EAAA,IAAAmB,EAGA,IAAAE,GAAAF,EAAAC,EAAApB,EAAA1N,EAAAuO,SAMA,SAAAQ,GAAAF,EAAAC,EAAApB,EAAAa,GACAhP,KAAAsP,KACAtP,KAAAuP,KACAvP,KAAAmO,KACAnO,KAAAgP,WA+BA,SAAAU,GAAAJ,EAAAK,EAAAC,GACA,YAAAN,EAAA,GAAAK,GAAAC,EAAAD,GAAAL,EAAA,GAAAA,EAAA,IAAAM,EAAAN,EAAA,IAAAK,GAAAC,EAAAD,IAAA,IAAAL,GAAA,GAAAK,GCxVO,SAAAE,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACP,IAAAC,EAAAL,IACAM,EAAAD,EAAAL,EACA,YAAAA,EAAA,EAAAK,EAAAC,GAAAL,GAAA,IAAAI,EAAA,EAAAC,GAAAJ,GAAA,IAAAF,EAAA,EAAAK,EAAA,EAAAC,GAAAH,EAAAG,EAAAF,GAAA,EDqKA/M,EAAMO,EAAQsK,EAAK,CACnBzL,KAAA,SAAA8N,GACA,OAAA7M,OAAA8M,OAAA,IAAAtQ,KAAAU,YAAAV,KAAAqQ,IAEAE,YAAA,WACA,OAAAvQ,KAAA4N,MAAA2C,eAEArB,IAAAvB,EAEAE,UAAAF,EACA6C,UASA,WACA,OAAAf,EAAAzP,MAAAwQ,aATAzC,UAAAD,EACAuB,SAAAvB,IAyDA3K,EAAMsL,EAAMM,EAAK1L,EAAMK,EAAA,CACvB+M,SAAA,SAAAC,GAEA,OADAA,EAAA,MAAAA,EA1OA,EAHA,GA6OAnS,KAAAkB,IA1OA,EAHA,GA6OAiR,GACA,IAAAjC,EAAAzO,KAAA6O,EAAA6B,EAAA1Q,KAAA8O,EAAA4B,EAAA1Q,KAAArD,EAAA+T,EAAA1Q,KAAAgP,UAEA2B,OAAA,SAAAD,GAEA,OADAA,EAAA,MAAAA,EAjPA,GAiPAnS,KAAAkB,IAjPA,GAiPAiR,GACA,IAAAjC,EAAAzO,KAAA6O,EAAA6B,EAAA1Q,KAAA8O,EAAA4B,EAAA1Q,KAAArD,EAAA+T,EAAA1Q,KAAAgP,UAEApB,IAAA,WACA,OAAA5N,MAEAuQ,YAAA,WACA,WAAAvQ,KAAA6O,GAAA7O,KAAA6O,EAAA,YAAA7O,KAAA8O,GAAA9O,KAAA8O,EAAA,YAAA9O,KAAArD,GAAAqD,KAAArD,EAAA,UAAAqD,KAAAgP,SAAAhP,KAAAgP,SAAA,GAEAE,IAAAD,EAEApB,UAAAoB,EACAlB,UAAAoB,EACAE,SAAAF,KA2DAhM,EAAMqM,GAXC,SAAAF,EAAAC,EAAApB,EAAAa,GACP,WAAA3Q,UAAArB,OAAAyS,EAAAH,GAAA,IAAAE,GAAAF,EAAAC,EAAApB,EAAA,MAAAa,EAAA,EAAAA,IAUiB3L,EAAMK,EAAA,CACvB+M,SAAA,SAAAC,GAEA,OADAA,EAAA,MAAAA,EAxTA,EAHA,GA2TAnS,KAAAkB,IAxTA,EAHA,GA2TAiR,GACA,IAAAlB,GAAAxP,KAAAsP,EAAAtP,KAAAuP,EAAAvP,KAAAmO,EAAAuC,EAAA1Q,KAAAgP,UAEA2B,OAAA,SAAAD,GAEA,OADAA,EAAA,MAAAA,EA/TA,GA+TAnS,KAAAkB,IA/TA,GA+TAiR,GACA,IAAAlB,GAAAxP,KAAAsP,EAAAtP,KAAAuP,EAAAvP,KAAAmO,EAAAuC,EAAA1Q,KAAAgP,UAEApB,IAAA,WACA,IAAA0B,EAAAtP,KAAAsP,EAAA,SAAAtP,KAAAsP,EAAA,GACAC,EAAAH,MAAAE,IAAAF,MAAApP,KAAAuP,GAAA,EAAAvP,KAAAuP,EACApB,EAAAnO,KAAAmO,EACAyB,EAAAzB,KAAA,GAAAA,EAAA,EAAAA,GAAAoB,EACAI,EAAA,EAAAxB,EAAAyB,EACA,WAAAnB,EAAAiB,GAAAJ,GAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAK,EAAAC,GAAAF,GAAAJ,EAAAK,EAAAC,GAAAF,GAAAJ,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAK,EAAAC,GAAA5P,KAAAgP,UAEAuB,YAAA,WACA,UAAAvQ,KAAAuP,GAAAvP,KAAAuP,GAAA,GAAAH,MAAApP,KAAAuP,KAAA,GAAAvP,KAAAmO,GAAAnO,KAAAmO,GAAA,MAAAnO,KAAAgP,SAAAhP,KAAAgP,SAAA,GAEAwB,UAAA,WACA,IAAA9T,EAAAsD,KAAAgP,QAEA,YADAtS,EAAA0S,MAAA1S,GAAA,EAAA6B,KAAAC,IAAA,EAAAD,KAAA2E,IAAA,EAAAxG,KACA,iBAAAsD,KAAAsP,GAAA,aAAAtP,KAAAuP,GAAA,cAAAvP,KAAAmO,GAAA,YAAAzR,EAAA,SAAAA,EAAA,SC7Ue,ICLAkU,GAAA,SAAA1T,GACf,kBACA,OAAAA,ICAA,SAAA2T,GAAAnU,EAAAO,GACA,gBAAA6T,GACA,OAAApU,EAAAoU,EAAA7T,GAcO,SAAA8T,GAAAC,GACP,YAAAA,MAAAC,GAAA,SAAAvU,EAAAC,GACA,OAAAA,EAAAD,EAZA,SAAAA,EAAAC,EAAAqU,GACA,OAAAtU,EAAA6B,KAAAkB,IAAA/C,EAAAsU,GAAArU,EAAA4B,KAAAkB,IAAA9C,EAAAqU,GAAAtU,EAAAsU,EAAA,EAAAA,EAAA,SAAAF,GACA,OAAAvS,KAAAkB,IAAA/C,EAAAoU,EAAAnU,EAAAqU,IAUAE,CAAAxU,EAAAC,EAAAqU,GAA0CJ,GAAQxB,MAAA1S,GAAAC,EAAAD,IAGnC,SAAAuU,GAAAvU,EAAAC,GACf,IAAAM,EAAAN,EAAAD,EACA,OAAAO,EAAA4T,GAAAnU,EAAAO,GAA4B2T,GAAQxB,MAAA1S,GAAAC,EAAAD,GCrBrB,IAAAyU,GAAA,SAAAC,EAAAJ,GACf,IAAAK,EAAcN,GAAKC,GAEnB,SAAApD,EAAA3P,EAAAqT,GACA,IAAAzC,EAAAwC,GAAApT,EAA2B8Q,EAAQ9Q,IAAA4Q,GAAAyC,EAAmBvC,EAAQuC,IAAAzC,GAC9DC,EAAAuC,EAAApT,EAAA6Q,EAAAwC,EAAAxC,GACAnS,EAAA0U,EAAApT,EAAAtB,EAAA2U,EAAA3U,GACAqS,EAAkBiC,GAAOhT,EAAA+Q,QAAAsC,EAAAtC,SACzB,gBAAA8B,GAKA,OAJA7S,EAAA4Q,IAAAiC,GACA7S,EAAA6Q,IAAAgC,GACA7S,EAAAtB,IAAAmU,GACA7S,EAAA+Q,UAAA8B,GACA7S,EAAA,IAKA,OADA2P,EAAAmD,MAAAK,EACAxD,EAlBe,CAmBd,GAED,SAAA2D,GAAAC,GACA,gBAAAC,GACA,IAIAnT,EACA+S,EALAjT,EAAAqT,EAAAzU,OACA6R,EAAA,IAAAjR,MAAAQ,GACA0Q,EAAA,IAAAlR,MAAAQ,GACAzB,EAAA,IAAAiB,MAAAQ,GAIA,IAAAE,EAAA,EAAeA,EAAAF,IAAOE,EACtB+S,EAActC,EAAQ0C,EAAAnT,IACtBuQ,EAAAvQ,GAAA+S,EAAAxC,GAAA,EACAC,EAAAxQ,GAAA+S,EAAAvC,GAAA,EACAnS,EAAA2B,GAAA+S,EAAA1U,GAAA,EAOA,OAJAkS,EAAA2C,EAAA3C,GACAC,EAAA0C,EAAA1C,GACAnS,EAAA6U,EAAA7U,GACA0U,EAAArC,QAAA,EACA,SAAA8B,GAIA,OAHAO,EAAAxC,IAAAiC,GACAO,EAAAvC,IAAAgC,GACAO,EAAA1U,IAAAmU,GACAO,EAAA,KAKOE,GHjDQ,SAAArQ,GACf,IAAA9C,EAAA8C,EAAAlE,OAAA,EACA,gBAAA8T,GACA,IAAAxS,EAAAwS,GAAA,EAAAA,EAAA,EAAAA,GAAA,GAAAA,EAAA,EAAA1S,EAAA,GAAAG,KAAAa,MAAA0R,EAAA1S,GACA4R,EAAA9O,EAAA5C,GACA2R,EAAA/O,EAAA5C,EAAA,GACAyR,EAAAzR,EAAA,EAAA4C,EAAA5C,EAAA,KAAA0R,EAAAC,EACAC,EAAA5R,EAAAF,EAAA,EAAA8C,EAAA5C,EAAA,KAAA2R,EAAAD,EACA,OAAAH,IAAAiB,EAAAxS,EAAAF,KAAA2R,EAAAC,EAAAC,EAAAC,MG0COqB,GCtDQ,SAAArQ,GACf,IAAA9C,EAAA8C,EAAAlE,OACA,gBAAA8T,GACA,IAAAxS,EAAAC,KAAAa,QAAA0R,GAAA,OAAAA,KAAA1S,GACA2R,EAAA7O,GAAA5C,EAAAF,EAAA,GAAAA,GACA4R,EAAA9O,EAAA5C,EAAAF,GACA6R,EAAA/O,GAAA5C,EAAA,GAAAF,GACA8R,EAAAhP,GAAA5C,EAAA,GAAAF,GACA,OAAWyR,IAAKiB,EAAAxS,EAAAF,KAAA2R,EAAAC,EAAAC,EAAAC,MD6CT,IEtDQwB,GAAA,SAAAhV,EAAAC,GACfA,MAAA,IACA,IAEA2B,EAFAF,EAAA1B,EAAA6B,KAAA2E,IAAAvG,EAAAK,OAAAN,EAAAM,QAAA,EACA2U,EAAAhV,EAAAoB,QAEA,gBAAA+S,GACA,IAAAxS,EAAA,EAAeA,EAAAF,IAAOE,EACtBqT,EAAArT,GAAA5B,EAAA4B,IAAA,EAAAwS,GAAAnU,EAAA2B,GAAAwS,EAGA,OAAAa,IAGO,SAAAC,GAAA1U,GACP,OAAA2U,YAAAC,OAAA5U,mBAAA6U,UCTO,SAAAC,GAAAtV,EAAAC,GACP,IAIA2B,EAJA2T,EAAAtV,IAAAK,OAAA,EACAkV,EAAAxV,EAAA6B,KAAA2E,IAAA+O,EAAAvV,EAAAM,QAAA,EACAE,EAAA,IAAAU,MAAAsU,GACAP,EAAA,IAAA/T,MAAAqU,GAGA,IAAA3T,EAAA,EAAaA,EAAA4T,IAAQ5T,EACrBpB,EAAAoB,GAAW6T,GAAKzV,EAAA4B,GAAA3B,EAAA2B,IAGhB,KAAQA,EAAA2T,IAAQ3T,EAChBqT,EAAArT,GAAA3B,EAAA2B,GAGA,gBAAAwS,GACA,IAAAxS,EAAA,EAAeA,EAAA4T,IAAQ5T,EACvBqT,EAAArT,GAAApB,EAAAoB,GAAAwS,GAGA,OAAAa,GCzBe,ICAAS,GAAA,SAAA1V,EAAAC,GACf,OAAAD,KAAAC,KAAA,SAAAmU,GACA,OAAApU,GAAA,EAAAoU,GAAAnU,EAAAmU,ICDAuB,GAAA,8CACAC,GAAA,IAAAtO,OAAAqO,GAAAE,OAAA,KAce,ICPAJ,GAAA,SAAAzV,EAAAC,GACf,IACAgV,EADAb,SAAAnU,EAEA,aAAAA,GAAA,YAAAmU,EAAwCF,GAAQjU,IAAA,WAAAmU,EAAwBsB,GAAM,WAAAtB,GAAAa,EAAyB3D,EAAKrR,OAAAgV,EAAeR,IDI5G,SAAAzU,EAAAC,GACf,IAEA6V,EAEAC,EAEAC,EANAC,EAAAN,GAAAO,UAAAN,GAAAM,UAAA,EAQAtU,GAAA,EAEAiR,EAAA,GAEAsD,EAAA,GAKA,IAFAnW,GAAA,GAAAC,GAAA,IAEA6V,EAAAH,GAAA/D,KAAA5R,MAAA+V,EAAAH,GAAAhE,KAAA3R,MACA+V,EAAAD,EAAAtQ,OAAAwQ,IAEAD,EAAA/V,EAAAoB,MAAA4U,EAAAD,GACAnD,EAAAjR,GAAAiR,EAAAjR,IAAAoU,EACAnD,IAAAjR,GAAAoU,IAGAF,IAAA,OAAAC,IAAA,IAEAlD,EAAAjR,GAAAiR,EAAAjR,IAAAmU,EACAlD,IAAAjR,GAAAmU,GAGAlD,IAAAjR,GAAA,KACAuU,EAAA5R,KAAA,CACA3C,IACApB,EAAWkV,GAAMI,EAAAC,MAIjBE,EAAAL,GAAAM,UAYA,OARAD,EAAAhW,EAAAK,SACA0V,EAAA/V,EAAAoB,MAAA4U,GACApD,EAAAjR,GAAAiR,EAAAjR,IAAAoU,EACAnD,IAAAjR,GAAAoU,GAKAnD,EAAAvS,OAAA,EAAA6V,EAAA,GAzDA,SAAAlW,GACA,gBAAAmU,GACA,OAAAnU,EAAAmU,GAAA,IAuDAgC,CAAAD,EAAA,GAAA3V,GA/DA,SAAaP,GACb,kBACA,OAAAA,GA6D6CoW,CAAIpW,MAAAkW,EAAA7V,OAAA,SAAA8T,GACjD,QAAArQ,EAAAnC,EAAA,EAAsBA,EAAA3B,IAAO2B,EAC7BiR,GAAA9O,EAAAoS,EAAAvU,OAAAmC,EAAAvD,EAAA4T,GAGA,OAAAvB,EAAAyD,KAAA,OC5DwIrW,aAAgBqR,EAAQmD,GAAGxU,aAAAsW,KHZpJ,SAAAvW,EAAAC,GACf,IAAAM,EAAA,IAAAgW,KACA,OAAAvW,KAAAC,KAAA,SAAAmU,GACA,OAAA7T,EAAAiW,QAAAxW,GAAA,EAAAoU,GAAAnU,EAAAmU,GAAA7T,IGSiM2U,GAAajV,GAAM+U,GAAW9T,MAAA4C,QAAA7D,GAAsBqV,GAAY,oBAAArV,EAAAwW,SAAA,oBAAAxW,EAAA0S,UAAAD,MAAAzS,GCXlP,SAAAD,EAAAC,GACf,IAEA+T,EAFApS,EAAA,GACAqT,EAAA,GAKA,IAAAjB,KAHA,OAAAhU,GAAA,kBAAAA,MAAA,IACA,OAAAC,GAAA,kBAAAA,MAAA,IAEAA,EACA+T,KAAAhU,EACA4B,EAAAoS,GAAayB,GAAKzV,EAAAgU,GAAA/T,EAAA+T,IAElBiB,EAAAjB,GAAA/T,EAAA+T,GAIA,gBAAAI,GACA,IAAAJ,KAAApS,EACAqT,EAAAjB,GAAApS,EAAAoS,GAAAI,GAGA,OAAAa,IDT+VS,IAAM1V,EAAAC,IEZtVyW,GAAA,SAAA1W,EAAAC,GACf,OAAAD,KAAAC,KAAA,SAAAmU,GACA,OAAAvS,KAAAoE,MAAAjG,GAAA,EAAAoU,GAAAnU,EAAAmU,KCFeuC,GAAA,SAAAnW,GACf,kBACA,OAAAA,ICFeoW,GAAA,SAAApW,GACf,OAAAA,GCIAqW,GAAA,MACO,SAASC,GAAQtW,GACxB,OAAAA,EAGA,SAAAuW,GAAA/W,EAAAC,GACA,OAAAA,GAAAD,MAAA,SAAAQ,GACA,OAAAA,EAAAR,GAAAC,GACM0W,GAAQjE,MAAAzS,GAAAC,IAAA,IAGd,SAAA8W,GAAA3T,GACA,IAEA+Q,EAFApU,EAAAqD,EAAA,GACApD,EAAAoD,IAAA/C,OAAA,GAGA,OADAN,EAAAC,IAAAmU,EAAApU,IAAAC,IAAAmU,GACA,SAAA5T,GACA,OAAAqB,KAAAC,IAAA9B,EAAA6B,KAAA2E,IAAAvG,EAAAO,KAMA,SAAAyW,GAAA5T,EAAArB,EAAAkV,GACA,IAAAC,EAAA9T,EAAA,GACA+T,EAAA/T,EAAA,GACAgU,EAAArV,EAAA,GACAsV,EAAAtV,EAAA,GAEA,OADAoV,EAAAD,KAAAJ,GAAAK,EAAAD,GAAAE,EAAAH,EAAAI,EAAAD,KAAgEF,EAAAJ,GAAAI,EAAAC,GAAAC,EAAAH,EAAAG,EAAAC,IAChE,SAAA9W,GACA,OAAA6W,EAAAF,EAAA3W,KAIA,SAAA+W,GAAAlU,EAAArB,EAAAkV,GACA,IAAAM,EAAA3V,KAAA2E,IAAAnD,EAAA/C,OAAA0B,EAAA1B,QAAA,EACAC,EAAA,IAAAW,MAAAsW,GACArF,EAAA,IAAAjR,MAAAsW,GACA5V,GAAA,EAOA,IALAyB,EAAAmU,GAAAnU,EAAA,KACAA,IAAAhC,QAAAkB,UACAP,IAAAX,QAAAkB,aAGAX,EAAA4V,GACAjX,EAAAqB,GAAAmV,GAAA1T,EAAAzB,GAAAyB,EAAAzB,EAAA,IACAuQ,EAAAvQ,GAAAsV,EAAAlV,EAAAJ,GAAAI,EAAAJ,EAAA,IAGA,gBAAApB,GACA,IAAAoB,EAAYZ,EAAMqC,EAAA7C,EAAA,EAAAgX,GAAA,EAClB,OAAArF,EAAAvQ,GAAArB,EAAAqB,GAAApB,KAIO,SAAAqF,GAAAgQ,EAAA4B,GACP,OAAAA,EAAApU,OAAAwS,EAAAxS,UAAArB,MAAA6T,EAAA7T,SAAAkV,YAAArB,EAAAqB,eAAAQ,MAAA7B,EAAA6B,SAAAhS,QAAAmQ,EAAAnQ,WAEO,SAAAiS,KACP,IAGAC,EACAC,EACAnS,EAEAoS,EACAC,EACAC,EATA3U,EAAAwT,GACA7U,EAAA6U,GACAK,EAAoBzB,GAIpBiC,EAAcZ,GAKd,SAAAzQ,IAGA,OAFAyR,EAAAjW,KAAA2E,IAAAnD,EAAA/C,OAAA0B,EAAA1B,QAAA,EAAAiX,GAAAN,GACAc,EAAAC,EAAA,KACAzS,EAGA,SAAAA,EAAA/E,GACA,OAAAkS,MAAAlS,MAAAkF,GAAAqS,MAAAD,EAAAzU,EAAA/B,IAAAsW,GAAA5V,EAAAkV,KAAAU,EAAAF,EAAAlX,KA+BA,OA5BA+E,EAAA0S,OAAA,SAAA3D,GACA,OAAAoD,EAAAG,GAAAG,MAAAF,EAAA9V,EAAAqB,EAAA/B,IAAAsW,GAAwFlC,MAAiBpB,MAGzG/O,EAAAlC,OAAA,SAAAsC,GACA,OAAAhE,UAAArB,QAAA+C,EAAwC4B,EAAGW,KAAAD,EAASiR,IAAMc,IAAaZ,KAAQY,EAAAV,GAAA3T,IAAAgD,KAAAhD,EAAAhC,SAG/EkE,EAAAvD,MAAA,SAAA2D,GACA,OAAAhE,UAAArB,QAAA0B,EAAuCkD,EAAKU,KAAAD,GAAAU,KAAArE,EAAAX,SAG5CkE,EAAAe,WAAA,SAAAX,GACA,OAAA3D,EAAmBkD,EAAKU,KAAAD,GAAAuR,EAAwBR,GAAgBrQ,KAGhEd,EAAAmS,MAAA,SAAA/R,GACA,OAAAhE,UAAArB,QAAAoX,EAAA/R,EAAAqR,GAAA3T,GAA6DyT,GAAQvR,GAAAmS,IAAqBZ,IAG1FvR,EAAA2R,YAAA,SAAAvR,GACA,OAAAhE,UAAArB,QAAA4W,EAAAvR,EAAAU,KAAA6Q,GAGA3R,EAAAG,QAAA,SAAAC,GACA,OAAAhE,UAAArB,QAAAoF,EAAAC,EAAAJ,GAAAG,GAGA,SAAA0O,EAAA8D,GAEA,OADAN,EAAAxD,EAAAyD,EAAAK,EACA7R,KAGe,SAAA8R,GAAAP,EAAAC,GACf,OAAAF,KAAAC,EAAAC,GCvHA,IAAAO,GAAA,2EACe,SAAAC,GAAAC,GACf,KAAAC,EAAAH,GAAAxG,KAAA0G,IAAA,UAAAE,MAAA,mBAAAF,GACA,IAAAC,EACA,WAAAE,GAAA,CACAC,KAAAH,EAAA,GACAnS,MAAAmS,EAAA,GACAI,KAAAJ,EAAA,GACAK,OAAAL,EAAA,GACAM,KAAAN,EAAA,GACAO,MAAAP,EAAA,GACAQ,MAAAR,EAAA,GACAS,UAAAT,EAAA,IAAAA,EAAA,GAAAlX,MAAA,GACAqQ,KAAA6G,EAAA,GACAU,KAAAV,EAAA,MAKO,SAAAE,GAAAH,GACPhV,KAAAoV,UAAA3S,IAAAuS,EAAAI,KAAA,IAAAJ,EAAAI,KAAA,GACApV,KAAA8C,WAAAL,IAAAuS,EAAAlS,MAAA,IAAAkS,EAAAlS,MAAA,GACA9C,KAAAqV,UAAA5S,IAAAuS,EAAAK,KAAA,IAAAL,EAAAK,KAAA,GACArV,KAAAsV,YAAA7S,IAAAuS,EAAAM,OAAA,GAAAN,EAAAM,OAAA,GACAtV,KAAAuV,OAAAP,EAAAO,KACAvV,KAAAwV,WAAA/S,IAAAuS,EAAAQ,WAAA/S,GAAAuS,EAAAQ,MACAxV,KAAAyV,QAAAT,EAAAS,MACAzV,KAAA0V,eAAAjT,IAAAuS,EAAAU,eAAAjT,GAAAuS,EAAAU,UACA1V,KAAAoO,OAAA4G,EAAA5G,KACApO,KAAA2V,UAAAlT,IAAAuS,EAAAW,KAAA,GAAAX,EAAAW,KAAA,GAZAZ,GAAAlX,UAAAsX,GAAAtX,UAeAsX,GAAAtX,UAAAwR,SAAA,WACA,OAAArP,KAAAoV,KAAApV,KAAA8C,MAAA9C,KAAAqV,KAAArV,KAAAsV,QAAAtV,KAAAuV,KAAA,cAAA9S,IAAAzC,KAAAwV,MAAA,GAAAjX,KAAAC,IAAA,IAAAwB,KAAAwV,SAAAxV,KAAAyV,MAAA,cAAAhT,IAAAzC,KAAA0V,UAAA,OAAAnX,KAAAC,IAAA,IAAAwB,KAAA0V,aAAA1V,KAAAoO,KAAA,QAAApO,KAAA2V,MC/Be,ICFRC,GCAHC,GACOC,GACAC,GFAIC,GAAA,SAAA9Y,EAAA+Y,GACf,IAAA3X,GAAApB,EAAA+Y,EAAA/Y,EAAAgZ,cAAAD,EAAA,GAAA/Y,EAAAgZ,iBAAAC,QAAA,oBAEA,IAAA7X,EACA8X,EAAAlZ,EAAAa,MAAA,EAAAO,GAGA,OAAA8X,EAAApZ,OAAA,EAAAoZ,EAAA,GAAAA,EAAArY,MAAA,GAAAqY,GAAAlZ,EAAAa,MAAAO,EAAA,KGTe+X,GAAA,SAAAnZ,GACf,OAAAA,EAAa8Y,GAAazX,KAAAqB,IAAA1C,OAAA,GAAAN,KCDX0Z,GAAA,SAAA/G,GACfgH,EAAA,QAAAC,EAAApY,EAAAmR,EAAAvS,OAAAsB,EAAA,EAAAmY,GAAA,EAAiDnY,EAAAF,IAAOE,EACxD,OAAAiR,EAAAjR,IACA,QACAmY,EAAAD,EAAAlY,EACA,MAEA,QACA,IAAAmY,MAAAnY,GACAkY,EAAAlY,EACA,MAEA,QACA,KAAAiR,EAAAjR,GAAA,MAAAiY,EACAE,EAAA,IAAAA,EAAA,GAKA,OAAAA,EAAA,EAAAlH,EAAAxR,MAAA,EAAA0Y,GAAAlH,EAAAxR,MAAAyY,EAAA,GAAAjH,GCnBemH,GAAA,SAAAxZ,EAAA+Y,GACf,IAAAhZ,EAAU+Y,GAAa9Y,EAAA+Y,GACvB,IAAAhZ,EAAA,OAAAC,EAAA,GACA,IAAAkZ,EAAAnZ,EAAA,GACA0Z,EAAA1Z,EAAA,GACA,OAAA0Z,EAAA,WAAA/Y,OAAA+Y,GAAA3D,KAAA,KAAAoD,IAAApZ,OAAA2Z,EAAA,EAAAP,EAAArY,MAAA,EAAA4Y,EAAA,OAAAP,EAAArY,MAAA4Y,EAAA,GAAAP,EAAA,IAAAxY,MAAA+Y,EAAAP,EAAApZ,OAAA,GAAAgW,KAAA,MCJe4D,GAAA,CACfC,IAAA,SAAA3Z,EAAA+Y,GACA,WAAA/Y,GAAA4Z,QAAAb,IAEAtZ,EAAA,SAAAO,GACA,OAAAqB,KAAAoE,MAAAzF,GAAAmS,SAAA,IAEAsC,EAAA,SAAAzU,GACA,OAAAA,EAAA,IAEAD,EAAA,SAAAC,GACA,OAAAqB,KAAAoE,MAAAzF,GAAAmS,SAAA,KAEA0H,EAAA,SAAA7Z,EAAA+Y,GACA,OAAA/Y,EAAAgZ,cAAAD,IAEAlZ,EAAA,SAAAG,EAAA+Y,GACA,OAAA/Y,EAAA4Z,QAAAb,IAEAnH,EAAA,SAAA5R,EAAA+Y,GACA,OAAA/Y,EAAA8Z,YAAAf,IAEAxV,EAAA,SAAAvD,GACA,OAAAqB,KAAAoE,MAAAzF,GAAAmS,SAAA,IAEA4G,EAAA,SAAA/Y,EAAA+Z,GACA,OAAWP,GAAa,IAAAxZ,EAAA+Z,IAExBpI,EAAO6H,GACPnH,EL7Be,SAAArS,EAAA+Y,GACf,IAAAhZ,EAAU+Y,GAAa9Y,EAAA+Y,GACvB,IAAAhZ,EAAA,OAAAC,EAAA,GACA,IAAAkZ,EAAAnZ,EAAA,GACA0Z,EAAA1Z,EAAA,GACAqB,EAAAqY,GAAAf,GAAA,EAAArX,KAAAC,KAAA,EAAAD,KAAA2E,IAAA,EAAA3E,KAAAa,MAAAuX,EAAA,QACAvY,EAAAgY,EAAApZ,OACA,OAAAsB,IAAAF,EAAAgY,EAAA9X,EAAAF,EAAAgY,EAAA,IAAAxY,MAAAU,EAAAF,EAAA,GAAA4U,KAAA,KAAA1U,EAAA,EAAA8X,EAAArY,MAAA,EAAAO,GAAA,IAAA8X,EAAArY,MAAAO,GAAA,SAAAV,MAAA,EAAAU,GAAA0U,KAAA,KAA2LgD,GAAa9Y,EAAAqB,KAAAC,IAAA,EAAAyX,EAAA3X,EAAA,QKuBxM4Y,EAAA,SAAAha,GACA,OAAAqB,KAAAoE,MAAAzF,GAAAmS,SAAA,IAAA8H,eAEAja,EAAA,SAAAka,GACA,OAAA7Y,KAAAoE,MAAAyU,GAAA/H,SAAA,MCpCegI,GAAA,SAAAna,GACf,OAAAA,GCOIoa,GAAG1Z,MAAAC,UAAAG,IACPuZ,GAAA,wENGE1B,GMFa,SAAA2B,GACf,ICXeC,EAAAC,EDWfC,OAAAlV,IAAA+U,EAAAC,eAAAhV,IAAA+U,EAAAE,UAAgFL,ICXjEI,EDWwFH,GAAGhV,KAAAkV,EAAAC,SAAAG,QCX3FF,EDW2FF,EAAAE,UAAA,GCV1G,SAAArX,EAAAmV,GAOA,IANA,IAAAlX,EAAA+B,EAAArD,OACA8T,EAAA,GACAoD,EAAA,EACApF,EAAA2I,EAAA,GACAza,EAAA,EAEAsB,EAAA,GAAAwQ,EAAA,IACA9R,EAAA8R,EAAA,EAAA0G,IAAA1G,EAAAvQ,KAAAC,IAAA,EAAAgX,EAAAxY,IACA8T,EAAA7P,KAAAZ,EAAAwX,UAAAvZ,GAAAwQ,EAAAxQ,EAAAwQ,OACA9R,GAAA8R,EAAA,GAAA0G,KACA1G,EAAA2I,EAAAvD,KAAA,GAAAuD,EAAAza,QAGA,OAAA8T,EAAA7R,UAAA+T,KAAA0E,KDHAI,OAAArV,IAAA+U,EAAAO,SAAA,GAAAP,EAAAO,SAAA,MACAC,OAAAvV,IAAA+U,EAAAO,SAAA,GAAAP,EAAAO,SAAA,MACAE,OAAAxV,IAAA+U,EAAAS,QAAA,IAAAT,EAAAS,QAAA,GACAC,OAAAzV,IAAA+U,EAAAU,SAAiDb,GEflC,SAAAa,GACf,gBAAA7X,GACA,OAAAA,EAAA8X,QAAA,kBAAA7Z,GACA,OAAA4Z,GAAA5Z,MFY4D8Z,CAAed,GAAGhV,KAAAkV,EAAAU,SAAAG,SAC9EC,OAAA7V,IAAA+U,EAAAc,QAAA,IAAAd,EAAAc,QAAA,GACAC,OAAA9V,IAAA+U,EAAAe,MAAA,IAAAf,EAAAe,MAAA,GACAC,OAAA/V,IAAA+U,EAAAgB,IAAA,MAAAhB,EAAAgB,IAAA,GAEA,SAAAC,EAAAzD,GAEA,IAAAI,GADAJ,EAAgBD,GAAeC,IAC/BI,KACAtS,EAAAkS,EAAAlS,MACAuS,EAAAL,EAAAK,KACAC,EAAAN,EAAAM,OACAC,EAAAP,EAAAO,KACAC,EAAAR,EAAAQ,MACAC,EAAAT,EAAAS,MACAC,EAAAV,EAAAU,UACAtH,EAAA4G,EAAA5G,KACAuH,EAAAX,EAAAW,KAEA,MAAAA,GAAAF,GAAA,EAAAE,EAAA,KACciB,GAAWjB,UAAAlT,IAAAiT,MAAA,IAAAtH,GAAA,EAAAuH,EAAA,MAEzBJ,GAAA,MAAAH,GAAA,MAAAtS,KAAAyS,GAAA,EAAAH,EAAA,IAAAtS,EAAA,KAGA,IAAA4V,EAAA,MAAApD,EAAAwC,EAAA,MAAAxC,GAAA,SAAAqD,KAAAhD,GAAA,IAAAA,EAAAtH,cAAA,GACAuK,EAAA,MAAAtD,EAAA0C,EAAA,OAAAW,KAAAhD,GAAA2C,EAAA,GAIAO,EAAqBjC,GAAWjB,GAChCmD,EAAA,aAAAH,KAAAhD,GAOA,SAAA1H,EAAA5N,GACA,IAEA/B,EACAF,EACAuT,EAJAoH,EAAAL,EACAM,EAAAJ,EAKA,SAAAjD,EACAqD,EAAAH,EAAAxY,GAAA2Y,EACA3Y,EAAA,OACO,CAGP,IAAA4Y,GAFA5Y,MAEA,KAAAA,EAAA,EAYA,GAVAA,EAAA+O,MAAA/O,GAAAmY,EAAAK,EAAAta,KAAAqB,IAAAS,GAAAqV,GAEAtH,IAAA/N,EAA0BiW,GAAUjW,IAEpC4Y,GAAA,KAAA5Y,GAAA,MAAAgV,IAAA4D,GAAA,GAEAF,GAAAE,EAAA,MAAA5D,IAAAkD,EAAA,MAAAlD,GAAA,MAAAA,EAAA,GAAAA,GAAA0D,EACAC,GAAA,MAAArD,EAAA4B,GAAA,EAAmD3B,GAAc,OAAAoD,GAAAC,GAAA,MAAA5D,EAAA,QAGjEyD,EAGA,IAFAxa,GAAA,EAAAF,EAAAiC,EAAArD,SAEAsB,EAAAF,GACA,OAAAuT,EAAAtR,EAAA6Y,WAAA5a,KAAAqT,EAAA,IACAqH,GAAA,KAAArH,EAAAsG,EAAA5X,EAAAtC,MAAAO,EAAA,GAAA+B,EAAAtC,MAAAO,IAAA0a,EACA3Y,IAAAtC,MAAA,EAAAO,GACA,OAOAmX,IAAAF,IAAAlV,EAAAsX,EAAAtX,EAAA8Y,MAEA,IAAAnc,EAAA+b,EAAA/b,OAAAqD,EAAArD,OAAAgc,EAAAhc,OACAiG,EAAAjG,EAAAwY,EAAA,IAAA5X,MAAA4X,EAAAxY,EAAA,GAAAgW,KAAAoC,GAAA,GAIA,OAFAK,GAAAF,IAAAlV,EAAAsX,EAAA1U,EAAA5C,EAAA4C,EAAAjG,OAAAwY,EAAAwD,EAAAhc,OAAAmc,KAAAlW,EAAA,IAEAH,GACA,QACAzC,EAAA0Y,EAAA1Y,EAAA2Y,EAAA/V,EACA,MAEA,QACA5C,EAAA0Y,EAAA9V,EAAA5C,EAAA2Y,EACA,MAEA,QACA3Y,EAAA4C,EAAAlF,MAAA,EAAAf,EAAAiG,EAAAjG,QAAA,GAAA+b,EAAA1Y,EAAA2Y,EAAA/V,EAAAlF,MAAAf,GACA,MAEA,QACAqD,EAAA4C,EAAA8V,EAAA1Y,EAAA2Y,EAIA,OAAAd,EAAA7X,GAOA,OAzEAqV,OAAAjT,IAAAiT,EAAA,WAAAiD,KAAAhD,GAAApX,KAAAC,IAAA,EAAAD,KAAA2E,IAAA,GAAAwS,IAAAnX,KAAAC,IAAA,EAAAD,KAAA2E,IAAA,GAAAwS,IAqEAzH,EAAAoB,SAAA,WACA,OAAA2F,EAAA,IAGA/G,EAaA,OACAA,OAAAwK,EACAW,aAZA,SAAApE,EAAA3U,GACA,IAAAtD,EAAA0b,IAAAzD,EAAmCD,GAAeC,IAAAW,KAAA,IAAAX,IAClD+B,EAAwD,EAAxDxY,KAAAC,KAAA,EAAAD,KAAA2E,IAAA,EAAA3E,KAAAa,MAAgDiX,GAAQhW,GAAA,KACxDqQ,EAAAnS,KAAAkB,IAAA,IAAAsX,GACA2B,EAAAnB,GAAA,EAAAR,EAAA,GACA,gBAAA1W,GACA,OAAAtD,EAAA2T,EAAArQ,GAAAqY,KNxHWW,CARX,CACApB,QAAA,IACAP,UAAA,IACAD,SAAA,IACAM,SAAA,SACAQ,MAAA,MAIEzC,GAASD,GAAM5H,OACf8H,GAAeF,GAAMuD,aSbR,ICCAE,GAAA,SAAArb,EAAAC,EAAAc,EAAAgW,GACf,IACAU,EADAvX,EAAauB,EAAQzB,EAAAC,EAAAc,GAIrB,QAFAgW,EAAcD,GAAe,MAAAC,EAAA,KAAAA,IAE7BW,MACA,QAEA,IAAAtV,EAAA9B,KAAAC,IAAAD,KAAAqB,IAAA3B,GAAAM,KAAAqB,IAAA1B,IAEA,OADA,MAAA8W,EAAAU,WAAAtG,MAAAsG,ECVe,SAAAvX,EAAAkC,GACf,OAAA9B,KAAAC,IAAA,EAAiE,EAAjED,KAAAC,KAAA,EAAAD,KAAA2E,IAAA,EAAA3E,KAAAa,MAAyDiX,GAAQhW,GAAA,KAAqBgW,GAAQ9X,KAAAqB,IAAAzB,KDShCob,CAAepb,EAAAkC,MAAA2U,EAAAU,aAC9DK,GAAYf,EAAA3U,GAG3B,OACA,QACA,QACA,QACA,QAEA,MAAA2U,EAAAU,WAAAtG,MAAAsG,EDpBe,SAAAvX,EAAAK,GAEf,OADAL,EAAAI,KAAAqB,IAAAzB,GAAAK,EAAAD,KAAAqB,IAAApB,GAAAL,EACAI,KAAAC,IAAA,EAAqB6X,GAAQ7X,GAAQ6X,GAAQlY,IAAA,ECkBiBqb,CAAcrb,EAAAI,KAAAC,IAAAD,KAAAqB,IAAA3B,GAAAM,KAAAqB,IAAA1B,QAAA8W,EAAAU,aAAA,MAAAV,EAAAW,OAC5E,MAGA,QACA,QAEA,MAAAX,EAAAU,WAAAtG,MAAAsG,EE3Be,SAAAvX,GACf,OAAAI,KAAAC,IAAA,GAAsB6X,GAAQ9X,KAAAqB,IAAAzB,KF0BgCsb,CAActb,MAAA6W,EAAAU,YAAA,SAAAV,EAAAW,OAK5E,OAASG,GAAMd,IG7BR,SAAA0E,GAAAzX,GACP,IAAAlC,EAAAkC,EAAAlC,OAmDA,OAjDAkC,EAAAlD,MAAA,SAAAC,GACA,IAAA/B,EAAA8C,IACA,OAAWhB,EAAK9B,EAAA,GAAAA,IAAAD,OAAA,SAAAgC,EAAA,GAAAA,IAGhBiD,EAAA0X,WAAA,SAAA3a,EAAAgW,GACA,IAAA/X,EAAA8C,IACA,OAAWuZ,GAAUrc,EAAA,GAAAA,IAAAD,OAAA,SAAAgC,EAAA,GAAAA,EAAAgW,IAGrB/S,EAAA2X,KAAA,SAAA5a,GACA,MAAAA,MAAA,IACA,IAKAb,EALAlB,EAAA8C,IACA0W,EAAA,EACAD,EAAAvZ,EAAAD,OAAA,EACAiB,EAAAhB,EAAAwZ,GACAvY,EAAAjB,EAAAuZ,GA8BA,OA3BAtY,EAAAD,IACAE,EAAAF,IAAAC,IAAAC,EACAA,EAAAsY,IAAAD,IAAArY,IAGAA,EAAWe,EAAajB,EAAAC,EAAAc,IAExB,EAGAb,EAAae,EAFbjB,EAAAM,KAAAa,MAAAnB,EAAAE,KACAD,EAAAK,KAAAE,KAAAP,EAAAC,KAC0Ba,GACrBb,EAAA,IAGLA,EAAae,EAFbjB,EAAAM,KAAAE,KAAAR,EAAAE,KACAD,EAAAK,KAAAa,MAAAlB,EAAAC,KAC0Ba,IAG1Bb,EAAA,GACAlB,EAAAwZ,GAAAlY,KAAAa,MAAAnB,EAAAE,KACAlB,EAAAuZ,GAAAjY,KAAAE,KAAAP,EAAAC,KACA4B,EAAA9C,IACKkB,EAAA,IACLlB,EAAAwZ,GAAAlY,KAAAE,KAAAR,EAAAE,KACAlB,EAAAuZ,GAAAjY,KAAAa,MAAAlB,EAAAC,KACA4B,EAAA9C,IAGAgF,GAGAA,EAEe,SAAS4X,KACxB,IAAA5X,EAAc4S,GAAWrB,GAAUA,IAOnC,OALAvR,EAAAM,KAAA,WACA,OAAWA,GAAIN,EAAQ4X,OAGrB/Z,EAAS0C,MAAAP,EAAA5D,WACXqb,GAAAzX,GClEA,IAAI6X,GAAE,IAAA7G,KACF8G,GAAE,IAAA9G,KACS,SAAA+G,GAAAC,EAAAC,EAAAlb,EAAAmb,GACf,SAAAC,EAAAC,GACA,OAAAJ,EAAAI,EAAA,IAAAhc,UAAArB,OAAA,IAAAiW,KAAA,IAAAA,MAAAoH,MAsEA,OAnEAD,EAAAhb,MAAA,SAAAib,GACA,OAAAJ,EAAAI,EAAA,IAAApH,MAAAoH,OAGAD,EAAA3b,KAAA,SAAA4b,GACA,OAAAJ,EAAAI,EAAA,IAAApH,KAAAoH,EAAA,IAAAH,EAAAG,EAAA,GAAAJ,EAAAI,MAGAD,EAAAzX,MAAA,SAAA0X,GACA,IAAAxG,EAAAuG,EAAAC,GACAvG,EAAAsG,EAAA3b,KAAA4b,GACA,OAAAA,EAAAxG,EAAAC,EAAAuG,EAAAxG,EAAAC,GAGAsG,EAAAE,OAAA,SAAAD,EAAAlc,GACA,OAAA+b,EAAAG,EAAA,IAAApH,MAAAoH,GAAA,MAAAlc,EAAA,EAAAI,KAAAa,MAAAjB,IAAAkc,GAGAD,EAAA1b,MAAA,SAAAT,EAAAC,EAAAC,GACA,IACAoc,EADA7b,EAAA,GAIA,GAFAT,EAAAmc,EAAA3b,KAAAR,GACAE,EAAA,MAAAA,EAAA,EAAAI,KAAAa,MAAAjB,KACAF,EAAAC,MAAAC,EAAA,UAAAO,EAEA,GACAA,EAAAuC,KAAAsZ,EAAA,IAAAtH,MAAAhV,IAAAic,EAAAjc,EAAAE,GAAA8b,EAAAhc,SACKsc,EAAAtc,KAAAC,GAEL,OAAAQ,GAGA0b,EAAAI,OAAA,SAAA7B,GACA,OAAAqB,GAAA,SAAAK,GACA,GAAAA,KAAA,KAAAJ,EAAAI,IAAA1B,EAAA0B,IACAA,EAAAnH,QAAAmH,EAAA,IAEK,SAAAA,EAAAlc,GACL,GAAAkc,KACA,GAAAlc,EAAA,SAAAA,GAAA,GACA,KAAA+b,EAAAG,GAAA,IAAA1B,EAAA0B,UAES,OAAAlc,GAAA,GACT,KAAA+b,EAAAG,EAAA,IAAA1B,EAAA0B,SAOArb,IACAob,EAAApb,MAAA,SAAAf,EAAAqT,GAGA,OAFMwI,GAAE5G,SAAAjV,GAAkB8b,GAAE7G,SAAA5B,GAC5B2I,EAAaH,IAAEG,EAAUF,IACzBxb,KAAAa,MAAAJ,EAA8B8a,GAAIC,MAGlCK,EAAAK,MAAA,SAAAtc,GAEA,OADAA,EAAAI,KAAAa,MAAAjB,GACAgB,SAAAhB,MAAA,EAAAA,EAAA,EAAAic,EAAAI,OAAAL,EAAA,SAAAld,GACA,OAAAkd,EAAAld,GAAAkB,IAAA,GACO,SAAAlB,GACP,OAAAmd,EAAApb,MAAA,EAAA/B,GAAAkB,IAAA,IAHAic,EAAA,OAQAA,ECzEA,IAAIM,GAAOV,GAAQ,SAAAK,GACnBA,EAAAM,SAAA,KACAN,EAAAO,SAAA,UACC,SAAAP,EAAAlc,GACDkc,EAAAQ,YAAAR,EAAAS,cAAA3c,IACC,SAAAF,EAAAqT,GACD,OAAAA,EAAAwJ,cAAA7c,EAAA6c,eACC,SAAAT,GACD,OAAAA,EAAAS,gBAGAJ,GAAID,MAAA,SAAA/J,GACJ,OAAAvR,SAAAuR,EAAAnS,KAAAa,MAAAsR,OAAA,EAA2DsJ,GAAQ,SAAAK,GACnEA,EAAAQ,YAAAtc,KAAAa,MAAAib,EAAAS,cAAApK,MACA2J,EAAAM,SAAA,KACAN,EAAAO,SAAA,UACG,SAAAP,EAAAlc,GACHkc,EAAAQ,YAAAR,EAAAS,cAAA3c,EAAAuS,KALA,MASe,IAAAqK,GAAA,GCrBXC,IDsBeN,GAAIhc,MCtBXsb,GAAQ,SAAAK,GACpBA,EAAAY,QAAA,GACAZ,EAAAO,SAAA,UACC,SAAAP,EAAAlc,GACDkc,EAAAM,SAAAN,EAAAa,WAAA/c,IACC,SAAAF,EAAAqT,GACD,OAAAA,EAAA4J,WAAAjd,EAAAid,WAAA,IAAA5J,EAAAwJ,cAAA7c,EAAA6c,gBACC,SAAAT,GACD,OAAAA,EAAAa,cCROC,IDWaH,GAAKtc,MCXlB,KAGA0c,GAAA,OCDP,SAAAC,GAAA/c,GACA,OAAS0b,GAAQ,SAAAK,GACjBA,EAAAY,QAAAZ,EAAAiB,WAAAjB,EAAAkB,SAAA,EAAAjd,GAAA,GACA+b,EAAAO,SAAA,UACG,SAAAP,EAAAlc,GACHkc,EAAAY,QAAAZ,EAAAiB,UAAA,EAAAnd,IACG,SAAAF,EAAAqT,GACH,OAAAA,EAAArT,GAAAqT,EAAAkK,oBAAAvd,EAAAud,qBAAkFL,IAAkBC,KAI7F,IAAAK,GAAAJ,GAAA,GACAK,GAAAL,GAAA,GACAM,GAAAN,GAAA,GACAO,GAAAP,GAAA,GACAQ,GAAAR,GAAA,GACAS,GAAAT,GAAA,GACAU,GAAAV,GAAA,GClBHW,IDmBGP,GAAA/c,MACAgd,GAAAhd,MACAid,GAAAjd,MACAkd,GAAAld,MACAmd,GAAAnd,MACAod,GAAApd,MACAqd,GAAArd,MCzBGsb,GAAQ,SAAAK,GAClBA,EAAAO,SAAA,UACC,SAAAP,EAAAlc,GACDkc,EAAAY,QAAAZ,EAAAiB,UAAAnd,IACC,SAAAF,EAAAqT,GACD,OAAAA,EAAArT,GAAAqT,EAAAkK,oBAAAvd,EAAAud,qBAAgFL,IFJzE,OEKN,SAAAd,GACD,OAAAA,EAAAiB,UAAA,KAEeW,GAAA,GCTXC,IDUcF,GAAGtd,MCVVsb,GAAQ,SAAAK,GACnBA,EAAAnH,QAAAmH,IAAA8B,kBHHO,IGGP9B,EAAA+B,aAAiF/B,EAAAgC,aAAuBlB,KACvG,SAAAd,EAAAlc,GACDkc,EAAAnH,SAAAmH,EHHO,KGGPlc,IACC,SAAAF,EAAAqT,GACD,OAAAA,EAAArT,GHLO,MGMN,SAAAoc,GACD,OAAAA,EAAAiC,cCPIC,IDUeL,GAAIxd,MCVVsb,GAAQ,SAAAK,GACrBA,EAAAnH,QAAAmH,IAAA8B,kBJHO,IIGP9B,EAAA+B,eACC,SAAA/B,EAAAlc,GACDkc,EAAAnH,SAAAmH,EAAAlc,EAA8Bgd,KAC7B,SAAAld,EAAAqT,GACD,OAAAA,EAAArT,GAAyBkd,IACxB,SAAAd,GACD,OAAAA,EAAAgC,gBCPIG,IDUiBD,GAAM7d,MCVdsb,GAAQ,SAAAK,GACrBA,EAAAnH,QAAAmH,IAAA8B,oBACC,SAAA9B,EAAAlc,GACDkc,EAAAnH,SAAAmH,ELLO,IKKPlc,IACC,SAAAF,EAAAqT,GACD,OAAAA,EAAArT,GLPO,KKQN,SAAAoc,GACD,OAAAA,EAAAoC,mBCRIC,IDWiBF,GAAM9d,MCXTsb,GAAQ,aACzB,SAAAK,EAAAlc,GACDkc,EAAAnH,SAAAmH,EAAAlc,IACC,SAAAF,EAAAqT,GACD,OAAAA,EAAArT,KAGAye,GAAWjC,MAAA,SAAA/J,GAEX,OADAA,EAAAnS,KAAAa,MAAAsR,GACAvR,SAAAuR,MAAA,EACAA,EAAA,EACSsJ,GAAQ,SAAAK,GACjBA,EAAAnH,QAAA3U,KAAAa,MAAAib,EAAA3J,OACG,SAAA2J,EAAAlc,GACHkc,EAAAnH,SAAAmH,EAAAlc,EAAAuS,IACG,SAAAzS,EAAAqT,GACH,OAAAA,EAAArT,GAAAyS,IANuBgM,GADvB,MAY0BA,GAAWhe,MCnBrC,SAAAie,GAAAre,GACA,OAAS0b,GAAQ,SAAAK,GACjBA,EAAAuC,WAAAvC,EAAAwC,cAAAxC,EAAAyC,YAAA,EAAAxe,GAAA,GACA+b,EAAA0C,YAAA,UACG,SAAA1C,EAAAlc,GACHkc,EAAAuC,WAAAvC,EAAAwC,aAAA,EAAA1e,IACG,SAAAF,EAAAqT,GACH,OAAAA,EAAArT,GAA2Bmd,KAIpB,IAAA4B,GAAAL,GAAA,GACAM,GAAAN,GAAA,GACAO,GAAAP,GAAA,GACAQ,GAAAR,GAAA,GACAS,GAAAT,GAAA,GACAU,GAAAV,GAAA,GACAW,GAAAX,GAAA,GClBPY,IDmBOP,GAAAte,MACAue,GAAAve,MACAwe,GAAAxe,MACAye,GAAAze,MACA0e,GAAA1e,MACA2e,GAAA3e,MACA4e,GAAA5e,MCzBMsb,GAAQ,SAAAK,GACrBA,EAAA0C,YAAA,UACC,SAAA1C,EAAAlc,GACDkc,EAAAuC,WAAAvC,EAAAwC,aAAA1e,IACC,SAAAF,EAAAqT,GACD,OAAAA,EAAArT,GRJO,OQKN,SAAAoc,GACD,OAAAA,EAAAwC,aAAA,KAEeW,GAAA,GCVfC,IDWOF,GAAA7e,MCXOsb,GAAQ,SAAAK,GACtBA,EAAAqD,YAAA,KACArD,EAAA0C,YAAA,UACC,SAAA1C,EAAAlc,GACDkc,EAAAsD,eAAAtD,EAAAuD,iBAAAzf,IACC,SAAAF,EAAAqT,GACD,OAAAA,EAAAsM,iBAAA3f,EAAA2f,kBACC,SAAAvD,GACD,OAAAA,EAAAuD,oBAGAH,GAAAhD,MAAA,SAAA/J,GACA,OAAAvR,SAAAuR,EAAAnS,KAAAa,MAAAsR,OAAA,EAA2DsJ,GAAQ,SAAAK,GACnEA,EAAAsD,eAAApf,KAAAa,MAAAib,EAAAuD,iBAAAlN,MACA2J,EAAAqD,YAAA,KACArD,EAAA0C,YAAA,UACG,SAAA1C,EAAAlc,GACHkc,EAAAsD,eAAAtD,EAAAuD,iBAAAzf,EAAAuS,KALA,MASe,IAAAmN,GAAA,GACRJ,GAAA/e,MCrBP,SAAAof,GAAA7gB,GACA,MAAAA,EAAA+T,GAAA/T,EAAA+T,EAAA,KACA,IAAAqJ,EAAA,IAAApH,MAAA,EAAAhW,EAAAiR,EAAAjR,MAAA8gB,EAAA9gB,EAAA+gB,EAAA/gB,EAAAghB,EAAAhhB,EAAAihB,GAEA,OADA7D,EAAAQ,YAAA5d,EAAA+T,GACAqJ,EAGA,WAAApH,KAAAhW,EAAA+T,EAAA/T,EAAAiR,EAAAjR,MAAA8gB,EAAA9gB,EAAA+gB,EAAA/gB,EAAAghB,EAAAhhB,EAAAihB,GAGA,SAAAC,GAAAlhB,GACA,MAAAA,EAAA+T,GAAA/T,EAAA+T,EAAA,KACA,IAAAqJ,EAAA,IAAApH,UAAAmL,KAAA,EAAAnhB,EAAAiR,EAAAjR,MAAA8gB,EAAA9gB,EAAA+gB,EAAA/gB,EAAAghB,EAAAhhB,EAAAihB,IAEA,OADA7D,EAAAsD,eAAA1gB,EAAA+T,GACAqJ,EAGA,WAAApH,UAAAmL,IAAAnhB,EAAA+T,EAAA/T,EAAAiR,EAAAjR,MAAA8gB,EAAA9gB,EAAA+gB,EAAA/gB,EAAAghB,EAAAhhB,EAAAihB,IAGA,SAAAG,GAAArN,EAAA9C,EAAAjR,GACA,OACA+T,IACA9C,IACAjR,IACA8gB,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,GAoWA,ICjYII,GDiYJC,GAAA,CACAC,IAAA,GACAnc,EAAA,IACAoc,EAAA,KAEAC,GAAA,UAEAC,GAAA,KACAC,GAAA,sBAEA,SAAAC,GAAAxe,EAAA+U,EAAAI,GACA,IAAAH,EAAAhV,EAAA,SACAye,GAAAzJ,GAAAhV,KAAA,GACArD,EAAA8hB,EAAA9hB,OACA,OAAAqY,GAAArY,EAAAwY,EAAA,IAAA5X,MAAA4X,EAAAxY,EAAA,GAAAgW,KAAAoC,GAAA0J,KAGA,SAAAC,GAAAxP,GACA,OAAAA,EAAA4I,QAAAyG,GAAA,QAGA,SAAAI,GAAAC,GACA,WAAAjb,OAAA,OAAAib,EAAAjhB,IAAA+gB,IAAA/L,KAAA,cAGA,SAAAkM,GAAAD,GAKA,IAJA,IAAAjhB,EAAA,GACAM,GAAA,EACAF,EAAA6gB,EAAAjiB,SAEAsB,EAAAF,GACAJ,EAAAihB,EAAA3gB,GAAA+P,eAAA/P,EAGA,OAAAN,EAGA,SAAAmhB,GAAAliB,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAAsgB,GAAApQ,KAAAwQ,EAAA/gB,MAAAO,IAAA,IACA,OAAAF,GAAAnB,EAAAmiB,GAAAhhB,EAAA,GAAAE,EAAAF,EAAA,GAAApB,SAAA,EAGA,SAAAqiB,GAAApiB,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAAsgB,GAAApQ,KAAAwQ,EAAA/gB,MAAAO,IAAA,IACA,OAAAF,GAAAnB,EAAA2X,GAAAxW,EAAA,GAAAE,EAAAF,EAAA,GAAApB,SAAA,EAGA,SAAAsiB,GAAAriB,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAAsgB,GAAApQ,KAAAwQ,EAAA/gB,MAAAO,IAAA,IACA,OAAAF,GAAAnB,EAAAsiB,GAAAnhB,EAAA,GAAAE,EAAAF,EAAA,GAAApB,SAAA,EAGA,SAAAwiB,GAAAviB,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAAsgB,GAAApQ,KAAAwQ,EAAA/gB,MAAAO,IAAA,IACA,OAAAF,GAAAnB,EAAAwiB,GAAArhB,EAAA,GAAAE,EAAAF,EAAA,GAAApB,SAAA,EAGA,SAAA0iB,GAAAziB,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAAsgB,GAAApQ,KAAAwQ,EAAA/gB,MAAAO,IAAA,IACA,OAAAF,GAAAnB,EAAA0iB,GAAAvhB,EAAA,GAAAE,EAAAF,EAAA,GAAApB,SAAA,EAGA,SAAA4iB,GAAA3iB,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAAsgB,GAAApQ,KAAAwQ,EAAA/gB,MAAAO,IAAA,IACA,OAAAF,GAAAnB,EAAA+T,GAAA5S,EAAA,GAAAE,EAAAF,EAAA,GAAApB,SAAA,EAGA,SAAA6iB,GAAA5iB,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAAsgB,GAAApQ,KAAAwQ,EAAA/gB,MAAAO,IAAA,IACA,OAAAF,GAAAnB,EAAA+T,GAAA5S,EAAA,KAAAA,EAAA,gBAAAE,EAAAF,EAAA,GAAApB,SAAA,EAGA,SAAA8iB,GAAA7iB,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAA,+BAAAkQ,KAAAwQ,EAAA/gB,MAAAO,IAAA,IACA,OAAAF,GAAAnB,EAAA8iB,EAAA3hB,EAAA,OAAAA,EAAA,IAAAA,EAAA,WAAAE,EAAAF,EAAA,GAAApB,SAAA,EAGA,SAAAgjB,GAAA/iB,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAAsgB,GAAApQ,KAAAwQ,EAAA/gB,MAAAO,IAAA,IACA,OAAAF,GAAAnB,EAAA4V,EAAA,EAAAzU,EAAA,KAAAE,EAAAF,EAAA,GAAApB,SAAA,EAGA,SAAAijB,GAAAhjB,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAAsgB,GAAApQ,KAAAwQ,EAAA/gB,MAAAO,IAAA,IACA,OAAAF,GAAAnB,EAAAiR,EAAA9P,EAAA,KAAAE,EAAAF,EAAA,GAAApB,SAAA,EAGA,SAAAkjB,GAAAjjB,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAAsgB,GAAApQ,KAAAwQ,EAAA/gB,MAAAO,IAAA,IACA,OAAAF,GAAAnB,KAAAmB,EAAA,GAAAE,EAAAF,EAAA,GAAApB,SAAA,EAGA,SAAAmjB,GAAAljB,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAAsgB,GAAApQ,KAAAwQ,EAAA/gB,MAAAO,IAAA,IACA,OAAAF,GAAAnB,EAAAiR,EAAA,EAAAjR,KAAAmB,EAAA,GAAAE,EAAAF,EAAA,GAAApB,SAAA,EAGA,SAAAojB,GAAAnjB,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAAsgB,GAAApQ,KAAAwQ,EAAA/gB,MAAAO,IAAA,IACA,OAAAF,GAAAnB,EAAA8gB,GAAA3f,EAAA,GAAAE,EAAAF,EAAA,GAAApB,SAAA,EAGA,SAAAqjB,GAAApjB,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAAsgB,GAAApQ,KAAAwQ,EAAA/gB,MAAAO,IAAA,IACA,OAAAF,GAAAnB,EAAA+gB,GAAA5f,EAAA,GAAAE,EAAAF,EAAA,GAAApB,SAAA,EAGA,SAAAsjB,GAAArjB,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAAsgB,GAAApQ,KAAAwQ,EAAA/gB,MAAAO,IAAA,IACA,OAAAF,GAAAnB,EAAAghB,GAAA7f,EAAA,GAAAE,EAAAF,EAAA,GAAApB,SAAA,EAGA,SAAAujB,GAAAtjB,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAAsgB,GAAApQ,KAAAwQ,EAAA/gB,MAAAO,IAAA,IACA,OAAAF,GAAAnB,EAAAihB,GAAA9f,EAAA,GAAAE,EAAAF,EAAA,GAAApB,SAAA,EAGA,SAAAwjB,GAAAvjB,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAAsgB,GAAApQ,KAAAwQ,EAAA/gB,MAAAO,IAAA,IACA,OAAAF,GAAAnB,EAAAihB,EAAA3f,KAAAa,MAAAhB,EAAA,QAAAE,EAAAF,EAAA,GAAApB,SAAA,EAGA,SAAAyjB,GAAAxjB,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAAugB,GAAArQ,KAAAwQ,EAAA/gB,MAAAO,IAAA,IACA,OAAAF,EAAAE,EAAAF,EAAA,GAAApB,QAAA,EAGA,SAAA0jB,GAAAzjB,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAAsgB,GAAApQ,KAAAwQ,EAAA/gB,MAAAO,IACA,OAAAF,GAAAnB,EAAA0jB,GAAAviB,EAAA,GAAAE,EAAAF,EAAA,GAAApB,SAAA,EAGA,SAAA4jB,GAAA3jB,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAAsgB,GAAApQ,KAAAwQ,EAAA/gB,MAAAO,IACA,OAAAF,GAAAnB,EAAAsS,GAAAnR,EAAA,GAAAE,EAAAF,EAAA,GAAApB,SAAA,EAGA,SAAA6jB,GAAA5jB,EAAAgZ,GACA,OAAA4I,GAAA5hB,EAAAqe,UAAArF,EAAA,GAGA,SAAA6K,GAAA7jB,EAAAgZ,GACA,OAAA4I,GAAA5hB,EAAAqf,WAAArG,EAAA,GAGA,SAAA8K,GAAA9jB,EAAAgZ,GACA,OAAA4I,GAAA5hB,EAAAqf,WAAA,OAAArG,EAAA,GAGA,SAAA+K,GAAA/jB,EAAAgZ,GACA,OAAA4I,GAAA,EAAiB5C,GAAOjd,MAAO+b,GAAQ9d,MAAAgZ,EAAA,GAGvC,SAAAgL,GAAAhkB,EAAAgZ,GACA,OAAA4I,GAAA5hB,EAAAkf,kBAAAlG,EAAA,GAGA,SAAAiL,GAAAjkB,EAAAgZ,GACA,OAAAgL,GAAAhkB,EAAAgZ,GAAA,MAGA,SAAAkL,GAAAlkB,EAAAgZ,GACA,OAAA4I,GAAA5hB,EAAAie,WAAA,EAAAjF,EAAA,GAGA,SAAAmL,GAAAnkB,EAAAgZ,GACA,OAAA4I,GAAA5hB,EAAAof,aAAApG,EAAA,GAGA,SAAAoL,GAAApkB,EAAAgZ,GACA,OAAA4I,GAAA5hB,EAAAmf,aAAAnG,EAAA,GAGA,SAAAqL,GAAArkB,GACA,IAAAskB,EAAAtkB,EAAAse,SACA,WAAAgG,EAAA,EAAAA,EAGA,SAAAC,GAAAvkB,EAAAgZ,GACA,OAAA4I,GAAapD,GAAUzc,MAAO+b,GAAQ9d,GAAA,EAAAA,GAAAgZ,EAAA,GAGtC,SAAAwL,GAAAxkB,EAAAgZ,GACA,IAAAsL,EAAAtkB,EAAAse,SAEA,OADAte,EAAAskB,GAAA,OAAAA,EAA8B1F,GAAY5e,GAAM4e,GAAYpd,KAAAxB,GAC5D4hB,GAAahD,GAAY7c,MAAO+b,GAAQ9d,OAAmB,IAAR8d,GAAQ9d,GAAAse,UAAAtF,EAAA,GAG3D,SAAAyL,GAAAzkB,GACA,OAAAA,EAAAse,SAGA,SAAAoG,GAAA1kB,EAAAgZ,GACA,OAAA4I,GAAanD,GAAU1c,MAAO+b,GAAQ9d,GAAA,EAAAA,GAAAgZ,EAAA,GAGtC,SAAS2L,GAAU3kB,EAAAgZ,GACnB,OAAA4I,GAAA5hB,EAAA6d,cAAA,IAAA7E,EAAA,GAGA,SAAA4L,GAAA5kB,EAAAgZ,GACA,OAAA4I,GAAA5hB,EAAA6d,cAAA,IAAA7E,EAAA,GAGA,SAAA6L,GAAA7kB,GACA,IAAA8kB,EAAA9kB,EAAAue,oBACA,OAAAuG,EAAA,OAAAA,IAAA,QAAAlD,GAAAkD,EAAA,YAAAlD,GAAAkD,EAAA,UAGA,SAAAC,GAAA/kB,EAAAgZ,GACA,OAAA4I,GAAA5hB,EAAA4f,aAAA5G,EAAA,GAGA,SAAAgM,GAAAhlB,EAAAgZ,GACA,OAAA4I,GAAA5hB,EAAAilB,cAAAjM,EAAA,GAGA,SAAAkM,GAAAllB,EAAAgZ,GACA,OAAA4I,GAAA5hB,EAAAilB,cAAA,OAAAjM,EAAA,GAGA,SAAAmM,GAAAnlB,EAAAgZ,GACA,OAAA4I,GAAA,EAAiBrB,GAAMxe,MAAO6e,GAAO5gB,MAAAgZ,EAAA,GAGrC,SAAAoM,GAAAplB,EAAAgZ,GACA,OAAA4I,GAAA5hB,EAAAqlB,qBAAArM,EAAA,GAGA,SAAAsM,GAAAtlB,EAAAgZ,GACA,OAAAoM,GAAAplB,EAAAgZ,GAAA,MAGA,SAAAuM,GAAAvlB,EAAAgZ,GACA,OAAA4I,GAAA5hB,EAAAwlB,cAAA,EAAAxM,EAAA,GAGA,SAAAyM,GAAAzlB,EAAAgZ,GACA,OAAA4I,GAAA5hB,EAAA0lB,gBAAA1M,EAAA,GAGA,SAAA2M,GAAA3lB,EAAAgZ,GACA,OAAA4I,GAAA5hB,EAAAwf,gBAAAxG,EAAA,GAGA,SAAA4M,GAAA5lB,GACA,IAAA6lB,EAAA7lB,EAAA6f,YACA,WAAAgG,EAAA,EAAAA,EAGA,SAAAC,GAAA9lB,EAAAgZ,GACA,OAAA4I,GAAa7B,GAAShe,MAAO6e,GAAO5gB,GAAA,EAAAA,GAAAgZ,EAAA,GAGpC,SAAA+M,GAAA/lB,EAAAgZ,GACA,IAAAsL,EAAAtkB,EAAA6f,YAEA,OADA7f,EAAAskB,GAAA,OAAAA,EAA8BnE,GAAWngB,GAAMmgB,GAAW3e,KAAAxB,GAC1D4hB,GAAazB,GAAWpe,MAAO6e,GAAO5gB,OAAkB,IAAP4gB,GAAO5gB,GAAA6f,aAAA7G,EAAA,GAGxD,SAAAgN,GAAAhmB,GACA,OAAAA,EAAA6f,YAGA,SAAAoG,GAAAjmB,EAAAgZ,GACA,OAAA4I,GAAa5B,GAASje,MAAO6e,GAAO5gB,GAAA,EAAAA,GAAAgZ,EAAA,GAGpC,SAAAkN,GAAAlmB,EAAAgZ,GACA,OAAA4I,GAAA5hB,EAAA2gB,iBAAA,IAAA3H,EAAA,GAGA,SAAAmN,GAAAnmB,EAAAgZ,GACA,OAAA4I,GAAA5hB,EAAA2gB,iBAAA,IAAA3H,EAAA,GAGA,SAAAoN,KACA,cAGA,SAAAC,KACA,UAGA,SAAAC,GAAAtmB,GACA,OAAAA,EAGA,SAAAumB,GAAAvmB,GACA,OAAAsB,KAAAa,OAAAnC,EAAA,MCnpBe,SAAsBsG,GACnC+a,GDiBa,SAAA9G,GACf,IAAAiM,EAAAjM,EAAAkM,SACAC,EAAAnM,EAAA6C,KACAuJ,EAAApM,EAAAqM,KACAC,EAAAtM,EAAAuM,QACAC,EAAAxM,EAAAyM,KACAC,EAAA1M,EAAA2M,UACAC,EAAA5M,EAAA6M,OACAC,EAAA9M,EAAA+M,YACAC,EAAAxF,GAAA8E,GACAW,EAAAvF,GAAA4E,GACAY,EAAA1F,GAAAgF,GACAW,EAAAzF,GAAA8E,GACAY,EAAA5F,GAAAkF,GACAW,EAAA3F,GAAAgF,GACAY,EAAA9F,GAAAoF,GACAW,EAAA7F,GAAAkF,GACAY,EAAAhG,GAAAsF,GACAW,EAAA/F,GAAAoF,GACAY,EAAA,CACAxoB,EAqPA,SAAAO,GACA,OAAAinB,EAAAjnB,EAAAse,WArPA4J,EAwPA,SAAAloB,GACA,OAAA+mB,EAAA/mB,EAAAse,WAxPA5e,EA2PA,SAAAM,GACA,OAAAqnB,EAAArnB,EAAAie,aA3PAkK,EA8PA,SAAAnoB,GACA,OAAAmnB,EAAAnnB,EAAAie,aA9PAvJ,EAAA,KACA1U,EAAA4jB,GACA9J,EAAA8J,GACA9jB,EAAAmkB,GACAnD,EAAA+C,GACAuE,EAAAtE,GACA7M,EAAA8M,GACA9C,EAAA+C,GACA/S,EAAAiT,GACAnD,EAAAoD,GACAnL,EAuPA,SAAAhZ,GACA,OAAA6mB,IAAA7mB,EAAAqf,YAAA,MAvPAzJ,EA0PA,SAAA5V,GACA,YAAAA,EAAAie,WAAA,IA1PAyF,EAAA4C,GACAhU,EAAAiU,GACAvF,EAAAoD,GACAzM,EAAA0M,GACA/B,EAAAiC,GACA/B,EAAAgC,GACArC,EAAAsC,GACA/B,EAAAgC,GACAzkB,EAAA,KACAga,EAAA,KACAlG,EAAS4Q,GACT0D,EAAAzD,GACA9B,EAAA+B,GACAjL,IAAAyM,IAEAiC,EAAA,CACA7oB,EA6OA,SAAAO,GACA,OAAAinB,EAAAjnB,EAAA6f,cA7OAqI,EAgPA,SAAAloB,GACA,OAAA+mB,EAAA/mB,EAAA6f,cAhPAngB,EAmPA,SAAAM,GACA,OAAAqnB,EAAArnB,EAAAwlB,gBAnPA2C,EAsPA,SAAAnoB,GACA,OAAAmnB,EAAAnnB,EAAAwlB,gBAtPA9Q,EAAA,KACA1U,EAAA+kB,GACAjL,EAAAiL,GACAjlB,EAAAwlB,GACAxE,EAAAkE,GACAoD,EAAAlD,GACAjO,EAAAkO,GACAlE,EAAAmE,GACAnU,EAAAsU,GACAxE,EAAA0E,GACAzM,EA+OA,SAAAhZ,GACA,OAAA6mB,IAAA7mB,EAAAilB,eAAA,MA/OArP,EAkPA,SAAA5V,GACA,YAAAA,EAAAwlB,cAAA,IAlPA9B,EAAA4C,GACAhU,EAAAiU,GACAvF,EAAA2E,GACAhO,EAAAiO,GACAtD,EAAAwD,GACAtD,EAAAuD,GACA5D,EAAA6D,GACAtD,EAAAuD,GACAhmB,EAAA,KACAga,EAAA,KACAlG,EAAAmS,GACAmC,EAAAlC,GACArD,EAAAsD,GACAxM,IAAAyM,IAEAkC,EAAA,CACA9oB,EAqJA,SAAAO,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAAwmB,EAAAtW,KAAAwQ,EAAA/gB,MAAAO,IACA,OAAAF,GAAAnB,EAAAmiB,EAAAyF,EAAAzmB,EAAA,GAAAiQ,eAAA/P,EAAAF,EAAA,GAAApB,SAAA,GAtJAmoB,EAyJA,SAAAloB,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAAsmB,EAAApW,KAAAwQ,EAAA/gB,MAAAO,IACA,OAAAF,GAAAnB,EAAAmiB,EAAAuF,EAAAvmB,EAAA,GAAAiQ,eAAA/P,EAAAF,EAAA,GAAApB,SAAA,GA1JAL,EA6JA,SAAAM,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAA4mB,EAAA1W,KAAAwQ,EAAA/gB,MAAAO,IACA,OAAAF,GAAAnB,EAAAiR,EAAA+W,EAAA7mB,EAAA,GAAAiQ,eAAA/P,EAAAF,EAAA,GAAApB,SAAA,GA9JAooB,EAiKA,SAAAnoB,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAA0mB,EAAAxW,KAAAwQ,EAAA/gB,MAAAO,IACA,OAAAF,GAAAnB,EAAAiR,EAAA6W,EAAA3mB,EAAA,GAAAiQ,eAAA/P,EAAAF,EAAA,GAAApB,SAAA,GAlKA2U,EAqKA,SAAA1U,EAAA6hB,EAAAxgB,GACA,OAAAmnB,EAAAxoB,EAAAwmB,EAAA3E,EAAAxgB,IArKArB,EAAAijB,GACAnJ,EAAAmJ,GACAnjB,EAAAyjB,GACAzC,EAAAqC,GACAiF,EAAAjF,GACAlM,EAAAiM,GACAjC,EAAAqC,GACArS,EAAA+R,GACAjC,EAAAqC,GACApK,EAkIA,SAAAhZ,EAAA6hB,EAAAxgB,GACA,IAAAF,EAAAomB,EAAAlW,KAAAwQ,EAAA/gB,MAAAO,IACA,OAAAF,GAAAnB,EAAAgZ,EAAAwO,EAAArmB,EAAA,GAAAiQ,eAAA/P,EAAAF,EAAA,GAAApB,SAAA,GAnIA6V,EAAAmN,GACAW,EAAAD,GACAnR,EAAAqR,GACA3C,EAAAqC,GACA1L,EAAAyK,GACAE,EAAAD,GACAG,EAAAD,GACAJ,EAAAD,GACAQ,EAAAD,GACAxiB,EAqJA,SAAAD,EAAA6hB,EAAAxgB,GACA,OAAAmnB,EAAAxoB,EAAA0mB,EAAA7E,EAAAxgB,IArJA4Y,EAwJA,SAAAja,EAAA6hB,EAAAxgB,GACA,OAAAmnB,EAAAxoB,EAAA2mB,EAAA9E,EAAAxgB,IAxJA0S,EAAA6O,GACAyF,EAAA1F,GACAG,EAAAD,GACAjJ,IAAA4J,IAUA,SAAAhI,EAAAzD,EAAAkQ,GACA,gBAAA7K,GACA,IAIA1I,EACAkN,EACA5Q,EANA6Q,EAAA,GACAxgB,GAAA,EACA4V,EAAA,EACA9V,EAAA4W,EAAAhY,OAMA,IAFAqd,aAAApH,OAAAoH,EAAA,IAAApH,MAAAoH,MAEA/b,EAAAF,GACA,KAAA4W,EAAAkE,WAAA5a,KACAwgB,EAAA7d,KAAA+T,EAAAjX,MAAAmW,EAAA5V,IACA,OAAAugB,EAAAN,GAAA5M,EAAAqD,EAAA0Q,SAAApnB,KAAAqT,EAAAqD,EAAA0Q,SAAApnB,GAAyFugB,EAAA,MAAAlN,EAAA,SACzF1D,EAAAiX,EAAAvT,QAAA1D,EAAAoM,EAAAwE,IACAC,EAAA7d,KAAA0Q,GACAuC,EAAA5V,EAAA,GAKA,OADAwgB,EAAA7d,KAAA+T,EAAAjX,MAAAmW,EAAA5V,IACAwgB,EAAA9L,KAAA,KAIA,SAAA2S,EAAA3Q,EAAA+K,GACA,gBAAAjB,GACA,IAEA8G,EACArE,EAHAtkB,EAAAohB,GAAA,UAAA5b,EAAA,GAIA,GAHAgjB,EAAAxoB,EAAA+X,EAAA8J,GAAA,OAGAA,EAAA9hB,OAAA,YAEA,SAAAC,EAAA,WAAAgW,KAAAhW,EAAA0jB,GACA,SAAA1jB,EAAA,WAAAgW,KAAA,IAAAhW,EAAAsS,GAAA,MAAAtS,IAAAihB,EAAA,IAQA,IANA6B,GAAA,MAAA9iB,MAAA8iB,EAAA,GAEA,MAAA9iB,MAAA8gB,EAAA9gB,EAAA8gB,EAAA,MAAA9gB,EAAAgZ,QAEAxT,IAAAxF,EAAAiR,IAAAjR,EAAAiR,EAAA,MAAAjR,IAAA4V,EAAA,GAEA,MAAA5V,EAAA,CACA,GAAAA,EAAAwiB,EAAA,GAAAxiB,EAAAwiB,EAAA,eACA,MAAAxiB,MAAAmiB,EAAA,GAEA,MAAAniB,GACAskB,GAAAqE,EAAAzH,GAAAE,GAAAphB,EAAA+T,EAAA,OAAA8L,YACA8I,EAAArE,EAAA,OAAAA,EAAwCtE,GAASxe,KAAAmnB,GAAc3I,GAAS2I,GACxEA,EAAiBpI,GAAMlD,OAAAsL,EAAA,GAAA3oB,EAAAwiB,EAAA,IACvBxiB,EAAA+T,EAAA4U,EAAAhI,iBACA3gB,EAAAiR,EAAA0X,EAAAnD,cACAxlB,IAAA2oB,EAAA/I,cAAA5f,EAAAmiB,EAAA,OAEAmC,GAAAqE,EAAA9H,GAAAO,GAAAphB,EAAA+T,EAAA,OAAAuK,SACAqK,EAAArE,EAAA,OAAAA,EAAwC7F,GAAUjd,KAAAmnB,GAAclK,GAAUkK,GAC1EA,EAAiB3J,GAAO3B,OAAAsL,EAAA,GAAA3oB,EAAAwiB,EAAA,IACxBxiB,EAAA+T,EAAA4U,EAAA9K,cACA7d,EAAAiR,EAAA0X,EAAA1K,WACAje,IAAA2oB,EAAAtK,WAAAre,EAAAmiB,EAAA,WAEO,MAAAniB,GAAA,MAAAA,KACP,MAAAA,MAAAmiB,EAAA,MAAAniB,IAAA2X,EAAA,QAAA3X,EAAA,KACAskB,EAAA,MAAAtkB,EAAAkhB,GAAAE,GAAAphB,EAAA+T,EAAA,MAAA8L,YAAAgB,GAAAO,GAAAphB,EAAA+T,EAAA,MAAAuK,SACAte,EAAAiR,EAAA,EACAjR,IAAA,MAAAA,KAAAmiB,EAAA,OAAAniB,EAAA0iB,GAAA4B,EAAA,KAAAtkB,EAAAmiB,EAAA,EAAAniB,EAAAsiB,GAAAgC,EAAA,MAKA,YAAAtkB,GACAA,EAAA8gB,GAAA9gB,EAAA8iB,EAAA,MACA9iB,EAAA+gB,GAAA/gB,EAAA8iB,EAAA,IACA5B,GAAAlhB,IAIA6gB,GAAA7gB,IAIA,SAAAwoB,EAAAxoB,EAAA+X,EAAA8J,EAAA5K,GAOA,IANA,IAGAvC,EACAkU,EAJAvnB,EAAA,EACAF,EAAA4W,EAAAhY,OACAkR,EAAA4Q,EAAA9hB,OAIAsB,EAAAF,GAAA,CACA,GAAA8V,GAAAhG,EAAA,SAGA,SAFAyD,EAAAqD,EAAAkE,WAAA5a,OAKA,GAFAqT,EAAAqD,EAAA0Q,OAAApnB,OACAunB,EAAAL,EAAA7T,KAAA4M,GAAAvJ,EAAA0Q,OAAApnB,KAAAqT,MACAuC,EAAA2R,EAAA5oB,EAAA6hB,EAAA5K,IAAA,gBACO,GAAAvC,GAAAmN,EAAA5F,WAAAhF,KACP,SAIA,OAAAA,EAwFA,OArMAgR,EAAAhoB,EAAAub,EAAAkL,EAAAuB,GACAA,EAAAhO,EAAAuB,EAAAmL,EAAAsB,GACAA,EAAAvT,EAAA8G,EAAAgL,EAAAyB,GACAK,EAAAroB,EAAAub,EAAAkL,EAAA4B,GACAA,EAAArO,EAAAuB,EAAAmL,EAAA2B,GACAA,EAAA5T,EAAA8G,EAAAgL,EAAA8B,GAgMA,CACAtX,OAAA,SAAA+G,GACA,IAAAjY,EAAA0b,EAAAzD,GAAA,GAAAkQ,GAMA,OAJAnoB,EAAAsS,SAAA,WACA,OAAA2F,GAGAjY,GAEA8oB,MAAA,SAAA7Q,GACA,IAAAiB,EAAA0P,EAAA3Q,GAAA,OAMA,OAJAiB,EAAA5G,SAAA,WACA,OAAA2F,GAGAiB,GAEA6P,UAAA,SAAA9Q,GACA,IAAAjY,EAAA0b,EAAAzD,GAAA,GAAAuQ,GAMA,OAJAxoB,EAAAsS,SAAA,WACA,OAAA2F,GAGAjY,GAEAgpB,SAAA,SAAA/Q,GACA,IAAAiB,EAAA0P,EAAA3Q,GAAA,OAMA,OAJAiB,EAAA5G,SAAA,WACA,OAAA2F,GAGAiB,IC7WW+P,CAAYziB,GACR+a,GAAMrQ,OACPqQ,GAAMuH,MACNvH,GAAMwH,UACPxH,GAAMyH,SAfnBE,CAAa,CACbvC,SAAA,SACArJ,KAAA,aACAwJ,KAAA,eACAE,QAAA,YACAE,KAAA,yEACAE,UAAA,4CACAE,OAAA,gHACAE,YAAA,4EC0Fe,ICvGf2B,GAAelM,GAAQ,SAAAK,GACvBA,EAAAuC,WAAA,GACAvC,EAAA0C,YAAA,UACC,SAAA1C,EAAAlc,GACDkc,EAAAqD,YAAArD,EAAAoI,cAAAtkB,IACC,SAAAF,EAAAqT,GACD,OAAAA,EAAAmR,cAAAxkB,EAAAwkB,cAAA,IAAAnR,EAAAsM,iBAAA3f,EAAA2f,mBACC,SAAAvD,GACD,OAAAA,EAAAoI,gBCPA0D,IDUOD,GAAAxnB,MCVOsb,GAAQ,SAAAK,GACtBA,EAAA+L,cAAA,QACC,SAAA/L,EAAAlc,GACDkc,EAAAnH,SAAAmH,EdHO,KcGPlc,IACC,SAAAF,EAAAqT,GACD,OAAAA,EAAArT,GdLO,McMN,SAAAoc,GACD,OAAAA,EAAA6H,iBCPAmE,IDUOF,GAAAznB,MCVSsb,GAAQ,SAAAK,GACxBA,EAAAiM,cAAA,MACC,SAAAjM,EAAAlc,GACDkc,EAAAnH,SAAAmH,EAAAlc,EAA8Bgd,KAC7B,SAAAld,EAAAqT,GACD,OAAAA,EAAArT,GAAyBkd,IACxB,SAAAd,GACD,OAAAA,EAAAsI,mBAGO0D,GAAA3nB,MCZP6nB,EAAAtpB,EAAAupB,EAAA,sBAAAzkB,IAAAwkB,EAAAtpB,EAAAupB,EAAA,sBAAA3M","file":"static/js/9.70bfab3f.chunk.js","sourcesContent":["export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","import { pair } from \"./pairs\";\nexport default function (values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","export default function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0:\n      break;\n\n    case 1:\n      this.range(domain);\n      break;\n\n    default:\n      this.range(range).domain(domain);\n      break;\n  }\n\n  return this;\n}\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0:\n      break;\n\n    case 1:\n      this.interpolator(domain);\n      break;\n\n    default:\n      this.interpolator(interpolator).domain(domain);\n      break;\n  }\n\n  return this;\n}","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function has(key) {\n    return prefix + key in this;\n  },\n  get: function get(key) {\n    return this[prefix + key];\n  },\n  set: function set(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function remove(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function clear() {\n    for (var property in this) {\n      if (property[0] === prefix) delete this[property];\n    }\n  },\n  keys: function keys() {\n    var keys = [];\n\n    for (var property in this) {\n      if (property[0] === prefix) keys.push(property.slice(1));\n    }\n\n    return keys;\n  },\n  values: function values() {\n    var values = [];\n\n    for (var property in this) {\n      if (property[0] === prefix) values.push(this[property]);\n    }\n\n    return values;\n  },\n  entries: function entries() {\n    var entries = [];\n\n    for (var property in this) {\n      if (property[0] === prefix) entries.push({\n        key: property.slice(1),\n        value: this[property]\n      });\n    }\n\n    return entries;\n  },\n  size: function size() {\n    var size = 0;\n\n    for (var property in this) {\n      if (property[0] === prefix) ++size;\n    }\n\n    return size;\n  },\n  empty: function empty() {\n    for (var property in this) {\n      if (property[0] === prefix) return false;\n    }\n\n    return true;\n  },\n  each: function each(f) {\n    for (var property in this) {\n      if (property[0] === prefix) f(this[property], property.slice(1), this);\n    }\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map(); // Copy constructor.\n\n  if (object instanceof Map) object.each(function (value, key) {\n    map.set(key, value);\n  }); // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n      if (f == null) while (++i < n) {\n        map.set(i, object[i]);\n      } else while (++i < n) {\n        map.set(f(o = object[i], i, object), o);\n      }\n    } // Convert object to map.\n    else if (object) for (var key in object) {\n        map.set(key, object[key]);\n      }\n  return map;\n}\n\nexport default map;","import { default as map, prefix } from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function add(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set(); // Copy constructor.\n\n  if (object instanceof Set) object.each(function (value) {\n    set.add(value);\n  }); // Otherwise, assume it’s an array.\n  else if (object) {\n      var i = -1,\n          n = object.length;\n      if (f == null) while (++i < n) {\n        set.add(object[i]);\n      } else while (++i < n) {\n        set.add(f(object[i], i, object));\n      }\n    }\n  return set;\n}\n\nexport default set;","var array = Array.prototype;\nexport var map = array.map;\nexport var slice = array.slice;","import { map } from \"d3-collection\";\nimport { slice } from \"./array\";\nimport { initRange } from \"./init\";\nexport var implicit = {\n  name: \"implicit\"\n};\nexport default function ordinal() {\n  var index = map(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\",\n        i = index.get(key);\n\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function (_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1,\n        n = _.length,\n        d,\n        key;\n\n    while (++i < n) {\n      if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    }\n\n    return scale;\n  };\n\n  scale.range = function (_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function () {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n  return scale;\n}","import { range as sequence } from \"d3-array\";\nimport { initRange } from \"./init\";\nimport ordinal from \"./ordinal\";\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function (i) {\n      return start + step * i;\n    });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function (_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function (_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function (_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function () {\n    return bandwidth;\n  };\n\n  scale.step = function () {\n    return step;\n  };\n\n  scale.round = function (_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function (_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function (_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function (_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function (_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function () {\n    return band(domain(), range).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function () {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}","export default function (constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n\n  for (var key in definition) {\n    prototype[key] = definition[key];\n  }\n\n  return prototype;\n}","import define, { extend } from \"./define.js\";\nexport function Color() {}\nvar _darker = 0.7;\nexport { _darker as darker };\n\nvar _brighter = 1 / _darker;\n\nexport { _brighter as brighter };\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\ndefine(Color, color, {\n  copy: function copy(channels) {\n    return Object.assign(new this.constructor(), this, channels);\n  },\n  displayable: function displayable() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex,\n  // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n  : l === 3 ? new Rgb(m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00\n  : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n  : l === 4 ? rgba(m >> 12 & 0xf | m >> 8 & 0xf0, m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, ((m & 0xf) << 4 | m & 0xf) / 0xff) // #f000\n  : null // invalid hex\n  ) : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n  : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n  : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n  : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n  : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n  : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n  : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n  : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0) : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb();\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function brighter(k) {\n    k = k == null ? _brighter : Math.pow(_brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function darker(k) {\n    k = k == null ? _darker : Math.pow(_darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function rgb() {\n    return this;\n  },\n  displayable: function displayable() {\n    return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;\n  },\n  hex: rgb_formatHex,\n  // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity;\n  a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \" + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \" + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl();\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n\n  return new Hsl(h, s, l, o.opacity);\n}\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function brighter(k) {\n    k = k == null ? _brighter : Math.pow(_brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function darker(k) {\n    k = k == null ? _darker : Math.pow(_darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);\n  },\n  displayable: function displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;\n  },\n  formatHsl: function formatHsl() {\n    var a = this.opacity;\n    a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\") + (this.h || 0) + \", \" + (this.s || 0) * 100 + \"%, \" + (this.l || 0) * 100 + \"%\" + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n/* From FvD 13.37, CSS Color Module Level 3 */\n\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;\n}","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1,\n      t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;\n}\nexport default function (values) {\n  var n = values.length - 1;\n  return function (t) {\n    var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}","export default function (x) {\n  return function () {\n    return x;\n  };\n}","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function (t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function (t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function (a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}","import { rgb as colorRgb } from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, { gamma } from \"./color.js\";\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function (t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function (colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i,\n        color;\n\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function (t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);","import { basis } from \"./basis.js\";\nexport default function (values) {\n  var n = values.length;\n  return function (t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}","export default function (a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function (t) {\n    for (i = 0; i < n; ++i) {\n      c[i] = a[i] * (1 - t) + b[i] * t;\n    }\n\n    return c;\n  };\n}\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}","import value from \"./value.js\";\nimport numberArray, { isNumberArray } from \"./numberArray.js\";\nexport default function (a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) {\n    x[i] = value(a[i], b[i]);\n  }\n\n  for (; i < nb; ++i) {\n    c[i] = b[i];\n  }\n\n  return function (t) {\n    for (i = 0; i < na; ++i) {\n      c[i] = x[i](t);\n    }\n\n    return c;\n  };\n}","export default function (a, b) {\n  var d = new Date();\n  return a = +a, b = +b, function (t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}","export default function (a, b) {\n  return a = +a, b = +b, function (t) {\n    return a * (1 - t) + b * t;\n  };\n}","import number from \"./number.js\";\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function () {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function (t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function (a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0,\n      // scan index for next number in b\n  am,\n      // current match in a\n  bm,\n      // current match in b\n  bs,\n      // string preceding current number in b, if any\n  i = -1,\n      // index in s\n  s = [],\n      // string constants and placeholders\n  q = []; // number interpolators\n  // Coerce inputs to strings.\n\n  a = a + \"\", b = b + \"\"; // Interpolate pairs of numbers in a & b.\n\n  while ((am = reA.exec(a)) && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) {\n      // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n\n    if ((am = am[0]) === (bm = bm[0])) {\n      // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else {\n      // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({\n        i: i,\n        x: number(am, bm)\n      });\n    }\n\n    bi = reB.lastIndex;\n  } // Add remains of b.\n\n\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  } // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n\n\n  return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function (t) {\n    for (var i = 0, o; i < b; ++i) {\n      s[(o = q[i]).i] = o.x(t);\n    }\n\n    return s.join(\"\");\n  });\n}","import { color } from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport { genericArray } from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, { isNumberArray } from \"./numberArray.js\";\nexport default function (a, b) {\n  var t = typeof b,\n      c;\n  return b == null || t === \"boolean\" ? constant(b) : (t === \"number\" ? number : t === \"string\" ? (c = color(b)) ? (b = c, rgb) : string : b instanceof color ? rgb : b instanceof Date ? date : isNumberArray(b) ? numberArray : Array.isArray(b) ? genericArray : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object : number)(a, b);\n}","import value from \"./value.js\";\nexport default function (a, b) {\n  var i = {},\n      c = {},\n      k;\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function (t) {\n    for (k in i) {\n      c[k] = i[k](t);\n    }\n\n    return c;\n  };\n}","export default function (a, b) {\n  return a = +a, b = +b, function (t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function (x) {\n  return +x;\n}","import { bisect } from \"d3-array\";\nimport { interpolate as interpolateValue, interpolateNumber, interpolateRound } from \"d3-interpolate\";\nimport { map, slice } from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\nvar unit = [0, 1];\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= a = +a) ? function (x) {\n    return (x - a) / b;\n  } : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(domain) {\n  var a = domain[0],\n      b = domain[domain.length - 1],\n      t;\n  if (a > b) t = a, a = b, b = t;\n  return function (x) {\n    return Math.max(a, Math.min(b, x));\n  };\n} // normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\n\n\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0],\n      d1 = domain[1],\n      r0 = range[0],\n      r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function (x) {\n    return r0(d0(x));\n  };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1; // Reverse descending domains.\n\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function (x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());\n}\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function (y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function (_) {\n    return arguments.length ? (domain = map.call(_, number), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();\n  };\n\n  scale.range = function (_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function (_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function (_) {\n    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;\n  };\n\n  scale.interpolate = function (_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function (t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\nexport default function continuous(transform, untransform) {\n  return transformer()(transform, untransform);\n}","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function () {\n  return this.fill + this.align + this.sign + this.symbol + (this.zero ? \"0\" : \"\") + (this.width === undefined ? \"\" : Math.max(1, this.width | 0)) + (this.comma ? \",\" : \"\") + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0)) + (this.trim ? \"~\" : \"\") + this.type;\n};","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function (x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\n  var i,\n      coefficient = x.slice(0, i); // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\n  return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];\n}","import formatDecimal from \"./formatDecimal.js\";\nexport var prefixExponent;\nexport default function (x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join(\"0\") : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i) : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}","import formatLocale from \"./locale.js\";\nvar locale;\nexport var format;\nexport var formatPrefix;\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"],\n  minus: \"-\"\n});\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}","import formatDecimal from \"./formatDecimal.js\";\nexport default function (x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function (s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\":\n        i0 = i1 = i;\n        break;\n\n      case \"0\":\n        if (i0 === 0) i0 = i;\n        i1 = i;\n        break;\n\n      default:\n        if (!+s[i]) break out;\n        if (i0 > 0) i0 = 0;\n        break;\n    }\n  }\n\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}","import formatDecimal from \"./formatDecimal.js\";\nexport default function (x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}","import formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\nexport default {\n  \"%\": function _(x, p) {\n    return (x * 100).toFixed(p);\n  },\n  \"b\": function b(x) {\n    return Math.round(x).toString(2);\n  },\n  \"c\": function c(x) {\n    return x + \"\";\n  },\n  \"d\": function d(x) {\n    return Math.round(x).toString(10);\n  },\n  \"e\": function e(x, p) {\n    return x.toExponential(p);\n  },\n  \"f\": function f(x, p) {\n    return x.toFixed(p);\n  },\n  \"g\": function g(x, p) {\n    return x.toPrecision(p);\n  },\n  \"o\": function o(x) {\n    return Math.round(x).toString(8);\n  },\n  \"p\": function p(x, _p) {\n    return formatRounded(x * 100, _p);\n  },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function X(x) {\n    return Math.round(x).toString(16).toUpperCase();\n  },\n  \"x\": function x(_x) {\n    return Math.round(_x).toString(16);\n  }\n};","export default function (x) {\n  return x;\n}","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport { prefixExponent } from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\nvar map = Array.prototype.map,\n    prefixes = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"];\nexport default function (locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"-\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type; // The \"n\" type is an alias for \",g\".\n\n    if (type === \"n\") comma = true, type = \"g\"; // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\"; // If zero fill is specified, padding goes after sign and before digits.\n\n    if (zero || fill === \"0\" && align === \"=\") zero = true, fill = \"0\", align = \"=\"; // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\"; // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type); // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n\n    precision = precision === undefined ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i,\n          n,\n          c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value; // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n\n        var valueNegative = value < 0 || 1 / value < 0; // Perform the initial formatting.\n\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision); // Trim insignificant zeros.\n\n        if (trim) value = formatTrim(value); // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false; // Compute the prefix and suffix.\n\n        valuePrefix = (valueNegative ? sign === \"(\" ? sign : minus : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\"); // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      } // If the fill character is not \"0\", grouping is applied before padding.\n\n\n      if (comma && !zero) value = group(value, Infinity); // Compute the padding.\n\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\"; // If the fill character is \"0\", grouping is applied after padding.\n\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\"; // Reconstruct the final output based on the desired alignment.\n\n      switch (align) {\n        case \"<\":\n          value = valuePrefix + value + valueSuffix + padding;\n          break;\n\n        case \"=\":\n          value = valuePrefix + padding + value + valueSuffix;\n          break;\n\n        case \"^\":\n          value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n          break;\n\n        default:\n          value = padding + valuePrefix + value + valueSuffix;\n          break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function () {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function (value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}","export default function (grouping, thousands) {\n  return function (value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}","export default function (numerals) {\n  return function (value) {\n    return value.replace(/[0-9]/g, function (i) {\n      return numerals[+i];\n    });\n  };\n}","import exponent from \"./exponent.js\";\nexport default function (step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}","import { tickStep } from \"d3-array\";\nimport { format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound } from \"d3-format\";\nexport default function (start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\n  switch (specifier.type) {\n    case \"s\":\n      {\n        var value = Math.max(Math.abs(start), Math.abs(stop));\n        if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n        return formatPrefix(specifier, value);\n      }\n\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\":\n      {\n        if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n        break;\n      }\n\n    case \"f\":\n    case \"%\":\n      {\n        if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n        break;\n      }\n  }\n\n  return format(specifier);\n}","import exponent from \"./exponent.js\";\nexport default function (step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}","import exponent from \"./exponent.js\";\nexport default function (step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}","import { ticks, tickIncrement } from \"d3-array\";\nimport continuous, { copy, identity } from \"./continuous\";\nimport { initRange } from \"./init\";\nimport tickFormat from \"./tickFormat\";\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function (count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function (count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function (count) {\n    if (count == null) count = 10;\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\nexport default function linear() {\n  var scale = continuous(identity, identity);\n\n  scale.copy = function () {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n  return linearish(scale);\n}","var t0 = new Date(),\n    t1 = new Date();\nexport default function newInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;\n  }\n\n  interval.floor = function (date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function (date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function (date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function (date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function (start, stop, step) {\n    var range = [],\n        previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n    do {\n      range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    } while (previous < start && start < stop);\n\n    return range;\n  };\n\n  interval.filter = function (test) {\n    return newInterval(function (date) {\n      if (date >= date) while (floori(date), !test(date)) {\n        date.setTime(date - 1);\n      }\n    }, function (date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function (start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function (step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {\n        return field(d) % step === 0;\n      } : function (d) {\n        return interval.count(0, d) % step === 0;\n      });\n    };\n  }\n\n  return interval;\n}","import interval from \"./interval.js\";\nvar year = interval(function (date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function (start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function (date) {\n  return date.getFullYear();\n}); // An optimized implementation for this simple case.\n\nyear.every = function (k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function (date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;","import interval from \"./interval.js\";\nvar month = interval(function (date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function (start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function (date) {\n  return date.getMonth();\n});\nexport default month;\nexport var months = month.range;","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;","import interval from \"./interval.js\";\nimport { durationMinute, durationWeek } from \"./duration.js\";\n\nfunction weekday(i) {\n  return interval(function (date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function (start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;","import interval from \"./interval.js\";\nimport { durationDay, durationMinute } from \"./duration.js\";\nvar day = interval(function (date) {\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setDate(date.getDate() + step);\n}, function (start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function (date) {\n  return date.getDate() - 1;\n});\nexport default day;\nexport var days = day.range;","import interval from \"./interval.js\";\nimport { durationHour, durationMinute, durationSecond } from \"./duration.js\";\nvar hour = interval(function (date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function (date, step) {\n  date.setTime(+date + step * durationHour);\n}, function (start, end) {\n  return (end - start) / durationHour;\n}, function (date) {\n  return date.getHours();\n});\nexport default hour;\nexport var hours = hour.range;","import interval from \"./interval.js\";\nimport { durationMinute, durationSecond } from \"./duration.js\";\nvar minute = interval(function (date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function (date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function (start, end) {\n  return (end - start) / durationMinute;\n}, function (date) {\n  return date.getMinutes();\n});\nexport default minute;\nexport var minutes = minute.range;","import interval from \"./interval.js\";\nimport { durationSecond } from \"./duration.js\";\nvar second = interval(function (date) {\n  date.setTime(date - date.getMilliseconds());\n}, function (date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function (start, end) {\n  return (end - start) / durationSecond;\n}, function (date) {\n  return date.getUTCSeconds();\n});\nexport default second;\nexport var seconds = second.range;","import interval from \"./interval.js\";\nvar millisecond = interval(function () {// noop\n}, function (date, step) {\n  date.setTime(+date + step);\n}, function (start, end) {\n  return end - start;\n}); // An optimized implementation for this simple case.\n\nmillisecond.every = function (k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function (date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function (date, step) {\n    date.setTime(+date + step * k);\n  }, function (start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;","import interval from \"./interval.js\";\nimport { durationWeek } from \"./duration.js\";\n\nfunction utcWeekday(i) {\n  return interval(function (date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function (start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;","import interval from \"./interval.js\";\nimport { durationDay } from \"./duration.js\";\nvar utcDay = interval(function (date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function (start, end) {\n  return (end - start) / durationDay;\n}, function (date) {\n  return date.getUTCDate() - 1;\n});\nexport default utcDay;\nexport var utcDays = utcDay.range;","import interval from \"./interval.js\";\nvar utcYear = interval(function (date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function (start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function (date) {\n  return date.getUTCFullYear();\n}); // An optimized implementation for this simple case.\n\nutcYear.every = function (k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function (date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;","import { timeDay, timeSunday, timeMonday, timeThursday, timeYear, utcDay, utcSunday, utcMonday, utcThursday, utcYear } from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newDate(y, m, d) {\n  return {\n    y: y,\n    m: m,\n    d: d,\n    H: 0,\n    M: 0,\n    S: 0,\n    L: 0\n  };\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"q\": formatQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"q\": formatUTCQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"q\": parseQuarter,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  }; // These recursive directive definitions must be deferred.\n\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function (date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, Z) {\n    return function (string) {\n      var d = newDate(1900, undefined, 1),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week,\n          day;\n      if (i != string.length) return null; // If a UNIX timestamp is specified, return it.\n\n      if (\"Q\" in d) return new Date(d.Q);\n      if (\"s\" in d) return new Date(d.s * 1000 + (\"L\" in d ? d.L : 0)); // If this is utcParse, never use the local timezone.\n\n      if (Z && !(\"Z\" in d)) d.Z = 0; // The am-pm flag is 0 for AM, and 1 for PM.\n\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12; // If the month was not specified, inherit from the quarter.\n\n      if (d.m === undefined) d.m = \"q\" in d ? d.q : 0; // Convert day-of-week and week-of-year to day-of-year.\n\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n\n        if (\"Z\" in d) {\n          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      } // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n\n\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      } // Otherwise, all fields are in local time.\n\n\n      return localDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || (j = parse(d, string, j)) < 0) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatQuarter(d) {\n    return 1 + ~~(d.getMonth() / 3);\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  function formatUTCQuarter(d) {\n    return 1 + ~~(d.getUTCMonth() / 3);\n  }\n\n  return {\n    format: function format(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n\n      f.toString = function () {\n        return specifier;\n      };\n\n      return f;\n    },\n    parse: function parse(specifier) {\n      var p = newParse(specifier += \"\", false);\n\n      p.toString = function () {\n        return specifier;\n      };\n\n      return p;\n    },\n    utcFormat: function utcFormat(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n\n      f.toString = function () {\n        return specifier;\n      };\n\n      return f;\n    },\n    utcParse: function utcParse(specifier) {\n      var p = newParse(specifier += \"\", true);\n\n      p.toString = function () {\n        return specifier;\n      };\n\n      return p;\n    }\n  };\n}\nvar pads = {\n  \"-\": \"\",\n  \"_\": \" \",\n  \"0\": \"0\"\n},\n    numberRe = /^\\s*\\d+/,\n    // note: ignores next directive\npercentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {},\n      i = -1,\n      n = names.length;\n\n  while (++i < n) {\n    map[names[i].toLowerCase()] = i;\n  }\n\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseQuarter(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.s = +n[0], i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = day >= 4 || day === 0 ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\")) + pad(z / 60 | 0, \"0\", 2) + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = day >= 4 || day === 0 ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}","import formatLocale from \"./locale.js\";\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}","import { bisector, tickStep } from \"d3-array\";\nimport { timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond } from \"d3-time\";\nimport { timeFormat } from \"d3-time-format\";\nimport { map } from \"./array\";\nimport continuous, { copy, identity } from \"./continuous\";\nimport { initRange } from \"./init\";\nimport nice from \"./nice\";\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(identity, identity),\n      invert = scale.invert,\n      domain = scale.domain;\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n  var tickIntervals = [[second, 1, durationSecond], [second, 5, 5 * durationSecond], [second, 15, 15 * durationSecond], [second, 30, 30 * durationSecond], [minute, 1, durationMinute], [minute, 5, 5 * durationMinute], [minute, 15, 15 * durationMinute], [minute, 30, 30 * durationMinute], [hour, 1, durationHour], [hour, 3, 3 * durationHour], [hour, 6, 6 * durationHour], [hour, 12, 12 * durationHour], [day, 1, durationDay], [day, 2, 2 * durationDay], [week, 1, durationWeek], [month, 1, durationMonth], [month, 3, 3 * durationMonth], [year, 1, durationYear]];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond : minute(date) < date ? formatSecond : hour(date) < date ? formatMinute : day(date) < date ? formatHour : month(date) < date ? week(date) < date ? formatDay : formatWeek : year(date) < date ? formatMonth : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10; // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function (i) {\n        return i[2];\n      }).right(tickIntervals, target);\n\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function (y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function (_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function (interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function (count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function (interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step)) ? domain(nice(d, interval)) : scale;\n  };\n\n  scale.copy = function () {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\nexport default function () {\n  return initRange.apply(calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}","import interval from \"./interval.js\";\nvar utcMonth = interval(function (date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function (start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function (date) {\n  return date.getUTCMonth();\n});\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;","import interval from \"./interval.js\";\nimport { durationHour } from \"./duration.js\";\nvar utcHour = interval(function (date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function (date, step) {\n  date.setTime(+date + step * durationHour);\n}, function (start, end) {\n  return (end - start) / durationHour;\n}, function (date) {\n  return date.getUTCHours();\n});\nexport default utcHour;\nexport var utcHours = utcHour.range;","import interval from \"./interval.js\";\nimport { durationMinute } from \"./duration.js\";\nvar utcMinute = interval(function (date) {\n  date.setUTCSeconds(0, 0);\n}, function (date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function (start, end) {\n  return (end - start) / durationMinute;\n}, function (date) {\n  return date.getUTCMinutes();\n});\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;","export { default as scaleBand, point as scalePoint } from \"./band\";\nexport { default as scaleIdentity } from \"./identity\";\nexport { default as scaleLinear } from \"./linear\";\nexport { default as scaleLog } from \"./log\";\nexport { default as scaleSymlog } from \"./symlog\";\nexport { default as scaleOrdinal, implicit as scaleImplicit } from \"./ordinal\";\nexport { default as scalePow, sqrt as scaleSqrt } from \"./pow\";\nexport { default as scaleQuantile } from \"./quantile\";\nexport { default as scaleQuantize } from \"./quantize\";\nexport { default as scaleThreshold } from \"./threshold\";\nexport { default as scaleTime } from \"./time\";\nexport { default as scaleUtc } from \"./utcTime\";\nexport { default as scaleSequential, sequentialLog as scaleSequentialLog, sequentialPow as scaleSequentialPow, sequentialSqrt as scaleSequentialSqrt, sequentialSymlog as scaleSequentialSymlog } from \"./sequential\";\nexport { default as scaleSequentialQuantile } from \"./sequentialQuantile\";\nexport { default as scaleDiverging, divergingLog as scaleDivergingLog, divergingPow as scaleDivergingPow, divergingSqrt as scaleDivergingSqrt, divergingSymlog as scaleDivergingSymlog } from \"./diverging\";\nexport { default as tickFormat } from \"./tickFormat\";"],"sourceRoot":""}